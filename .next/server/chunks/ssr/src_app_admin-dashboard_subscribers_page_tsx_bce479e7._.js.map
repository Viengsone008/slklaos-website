{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/subscribers/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { \n  Mail, \n  Plus, \n  Search, \n  Filter, \n  CheckCircle, \n  XCircle, \n  Edit, \n  Trash2, \n  Save, \n  X,\n  Download,\n  RefreshCw,\n  Eye,\n  Clock,\n  Calendar,\n  Send,\n  AlertCircle\n} from 'lucide-react';\nimport { useDatabase } from '../../../contexts/DatabaseContext';\nimport { useAuth } from \"../../../contexts/AuthContext\";\nimport { Subscriber } from '../../types/Subscriber';\nimport { supabase } from \"../../../lib/supabase\";\nimport dynamic from 'next/dynamic';\n\n// Dynamically import XLSX to prevent SSR issues\nconst XLSX = dynamic(() => import('xlsx'), {\n  ssr: false\n});\n\n// Dynamically import toast to prevent SSR issues\nconst toast = dynamic(() => import('react-toastify').then(mod => mod.toast), {\n  ssr: false\n});\n\n// Dynamically import ToastContainer for client-side only\nconst ToastContainer = dynamic(() => import('react-toastify').then(mod => mod.ToastContainer), {\n  ssr: false\n});\n\ninterface SubscriberPreferences {\n  news: boolean;\n  projects: boolean;\n  announcements: boolean;\n  blog: boolean;\n}\n\ninterface SubscriberFormData {\n  email: string;\n  status: string;\n  source: string;\n  preferences: SubscriberPreferences;\n}\n\nconst SubscriberManagement = () => {\n  const { getAllRecords, createRecord, updateRecord, deleteRecord } = useDatabase();\n  const { user } = useAuth();\n  \n  const [isClient, setIsClient] = useState(false);\n  const [subscribers, setSubscribers] = useState<Subscriber[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [sourceFilter, setSourceFilter] = useState('all');\n  \n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingSubscriber, setEditingSubscriber] = useState<Subscriber | null>(null);\n  const [selectedSubscriber, setSelectedSubscriber] = useState<Subscriber | null>(null);\n  const [viewMode, setViewMode] = useState<'list' | 'detail'>('list');\n  const [deleteConfirmModalOpen, setDeleteConfirmModalOpen] = useState(false);\n  const [subscriberToDelete, setSubscriberToDelete] = useState<Subscriber | null>(null);\n\n  const [formData, setFormData] = useState<SubscriberFormData>({\n    email: '',\n    status: 'active',\n    source: 'manual',\n    preferences: {\n      news: true,\n      projects: true,\n      announcements: true,\n      blog: true\n    }\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Client-side hydration check\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    if (isClient) {\n      loadSubscribers();\n    }\n  }, [isClient]);\n\n  const showToast = (message: string, type: 'success' | 'error' = 'success') => {\n    if (!isClient || typeof window === 'undefined') return;\n    \n    // Use dynamic import for toast functionality\n    import('react-toastify').then(({ toast }) => {\n      if (type === 'success') {\n        toast.success(message);\n      } else {\n        toast.error(message);\n      }\n    });\n  };\n\n  const loadSubscribers = async () => {\n    setIsLoading(true);\n    try {\n      const subscribersData = await getAllRecords('newsletter_subscribers');\n      setSubscribers(subscribersData || []);\n    } catch (error) {\n      console.error('Error loading subscribers data:', error);\n      setError('Failed to load subscribers. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRefresh = async () => {\n    await loadSubscribers();\n    showToast('Subscriber list refreshed');\n  };\n\n  const handleCreateClick = () => {\n    setShowCreateForm(true);\n    setEditingSubscriber(null);\n    setFormData({\n      email: '',\n      status: 'active',\n      source: 'manual',\n      preferences: {\n        news: true,\n        projects: true,\n        announcements: true,\n        blog: true\n      }\n    });\n    setError('');\n  };\n\n  const handleEditClick = (subscriber: Subscriber) => {\n    setEditingSubscriber(subscriber);\n    setShowCreateForm(false);\n    setFormData({\n      email: subscriber.email || '',\n      status: subscriber.status || 'active',\n      source: subscriber.source || 'manual',\n      preferences: subscriber.preferences || {\n        news: true,\n        projects: true,\n        announcements: true,\n        blog: true\n      }\n    });\n    setError('');\n  };\n\n  const handleViewSubscriber = (subscriber: Subscriber) => {\n    setSelectedSubscriber(subscriber);\n    setViewMode('detail');\n  };\n\n  const handleBackToList = () => {\n    setSelectedSubscriber(null);\n    setViewMode('list');\n  };\n\n  const handleDeleteClick = (subscriber: Subscriber) => {\n    setSubscriberToDelete(subscriber);\n    setDeleteConfirmModalOpen(true);\n  };\n\n  const confirmDeleteSubscriber = async () => {\n    if (!subscriberToDelete) return;\n\n    try {\n      setIsLoading(true);\n      await deleteRecord(subscriberToDelete.id, 'newsletter_subscribers');\n      showToast('Subscriber deleted');\n      await loadSubscribers();\n    } catch (error) {\n      console.error('Delete error:', error);\n      showToast('Failed to delete subscriber', 'error');\n    } finally {\n      setDeleteConfirmModalOpen(false);\n      setSubscriberToDelete(null);\n      setIsLoading(false);\n    }\n  };\n\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    if (error) setError('');\n  };\n\n  const handlePreferenceChange = (preference: string, checked: boolean) => {\n    setFormData(prev => ({\n      ...prev,\n      preferences: {\n        ...prev.preferences,\n        [preference]: checked\n      }\n    }));\n  };\n\n  const handleSubmitCreate = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Validate form\n      if (!formData.email.trim()) {\n        setError('Email is required');\n        setIsLoading(false);\n        return;\n      }\n      \n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n        setError('Please enter a valid email address');\n        setIsLoading(false);\n        return;\n      }\n      \n      // Create subscriber\n      const subscriberData = {\n        email: formData.email.trim().toLowerCase(),\n        status: formData.status,\n        source: formData.source,\n        preferences: formData.preferences,\n        subscribed_at: new Date().toISOString()\n      };\n      \n      await createRecord('newsletter_subscribers', subscriberData);\n      showToast('Subscriber added successfully');\n      setShowCreateForm(false);\n      \n      // Refresh subscribers\n      await loadSubscribers();\n    } catch (error) {\n      console.error('Error creating subscriber:', error);\n      setError('Failed to add subscriber. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSubmitEdit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!editingSubscriber) return;\n    \n    try {\n      setIsLoading(true);\n      setError('');\n      \n      // Validate form\n      if (!formData.email.trim()) {\n        setError('Email is required');\n        setIsLoading(false);\n        return;\n      }\n      \n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n        setError('Please enter a valid email address');\n        setIsLoading(false);\n        return;\n      }\n      \n      // Update subscriber\n      const subscriberData = {\n        email: formData.email.trim().toLowerCase(),\n        status: formData.status,\n        source: formData.source,\n        preferences: formData.preferences,\n        updated_at: new Date().toISOString()\n      };\n      \n      await updateRecord(editingSubscriber.id, subscriberData, 'newsletter_subscribers');\n      showToast('Subscriber updated successfully');\n      setEditingSubscriber(null);\n      \n      // Refresh subscribers\n      await loadSubscribers();\n    } catch (error) {\n      console.error('Error updating subscriber:', error);\n      setError('Failed to update subscriber. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleExportSubscribers = async () => {\n    if (!isClient || typeof window === 'undefined') return;\n    \n    try {\n      const xlsxModule = await import('xlsx');\n      \n      // Prepare data for export\n      const dataToExport = subscribers.map(subscriber => ({\n        email: subscriber.email || '',\n        status: subscriber.status || '',\n        source: subscriber.source || '',\n        subscribed_at: subscriber.subscribed_at ? new Date(subscriber.subscribed_at).toLocaleString() : '',\n        news: subscriber.preferences?.news ? 'Yes' : 'No',\n        projects: subscriber.preferences?.projects ? 'Yes' : 'No',\n        announcements: subscriber.preferences?.announcements ? 'Yes' : 'No',\n        blog: subscriber.preferences?.blog ? 'Yes' : 'No'\n      }));\n      \n      // Create a worksheet from the data\n      const worksheet = xlsxModule.utils.json_to_sheet(dataToExport);\n      \n      // Create a workbook and add the worksheet\n      const workbook = xlsxModule.utils.book_new();\n      xlsxModule.utils.book_append_sheet(workbook, worksheet, 'Subscribers');\n      \n      // Generate the file and trigger download\n      xlsxModule.writeFile(workbook, `subscribers_${new Date().toISOString().split('T')[0]}.xlsx`);\n      \n      showToast('Subscribers exported successfully');\n    } catch (error) {\n      console.error('Error exporting subscribers:', error);\n      showToast('Failed to export subscribers. Please try again.', 'error');\n    }\n  };\n\n  // Get unique sources for filter\n  const sources = [...new Set(subscribers.map(s => s.source).filter(Boolean))];\n\n  const filteredSubscribers = subscribers.filter(subscriber => {\n    // Apply search filter - safely handle undefined/null email\n    const email = subscriber.email || '';\n    const matchesSearch = email.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    // Apply status filter\n    const matchesStatus = statusFilter === 'all' || subscriber.status === statusFilter;\n    \n    // Apply source filter\n    const matchesSource = sourceFilter === 'all' || subscriber.source === sourceFilter;\n    \n    return matchesSearch && matchesStatus && matchesSource;\n  });\n\n  const getStatusColor = (status: string = '') => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'unsubscribed': return 'bg-gray-100 text-gray-800';\n      case 'bounced': return 'bg-yellow-100 text-yellow-800';\n      case 'complained': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusIcon = (status: string = '') => {\n    switch (status) {\n      case 'active': return <CheckCircle className=\"w-4 h-4 mr-1\" />;\n      case 'unsubscribed': return <XCircle className=\"w-4 h-4 mr-1\" />;\n      case 'bounced': return <AlertCircle className=\"w-4 h-4 mr-1\" />;\n      case 'complained': return <AlertCircle className=\"w-4 h-4 mr-1\" />;\n      default: return null;\n    }\n  };\n\n  const formatDate = (dateString: string | undefined) => {\n    if (!dateString) return 'Not available';\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-US', { \n        year: 'numeric', \n        month: 'short', \n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } catch {\n      return 'Invalid date';\n    }\n  };\n\n  const renderSubscriberForm = (isCreate: boolean) => {\n    const formTitle = isCreate ? 'Add New Subscriber' : 'Edit Subscriber';\n    const submitHandler = isCreate ? handleSubmitCreate : handleSubmitEdit;\n    const cancelHandler = isCreate ? () => setShowCreateForm(false) : () => setEditingSubscriber(null);\n    \n    return (\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h3 className=\"text-xl font-semibold text-gray-900 flex items-center\">\n            <Mail className=\"w-5 h-5 mr-2 text-blue-600\" />\n            {formTitle}\n          </h3>\n          <button\n            onClick={cancelHandler}\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n          >\n            <X className=\"w-6 h-6\" />\n          </button>\n        </div>\n\n        <form onSubmit={submitHandler} className=\"space-y-6\">\n          <div className=\"grid lg:grid-cols-4 gap-8\">\n            {/* Email */}\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email Address *\n              </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleFormChange}\n                required\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter email address\"\n              />\n            </div>\n\n            {/* Status */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Status\n              </label>\n              <select\n                name=\"status\"\n                value={formData.status}\n                onChange={handleFormChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"active\">Active</option>\n                <option value=\"unsubscribed\">Unsubscribed</option>\n                <option value=\"bounced\">Bounced</option>\n                <option value=\"complained\">Complained</option>\n              </select>\n            </div>\n\n            {/* Source */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Source\n              </label>\n              <select\n                name=\"source\"\n                value={formData.source}\n                onChange={handleFormChange}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              >\n                <option value=\"manual\">Manual Entry</option>\n                <option value=\"website\">Website</option>\n                <option value=\"footer\">Footer Form</option>\n                <option value=\"news_page\">News Page</option>\n                <option value=\"import\">Import</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n\n            {/* Preferences */}\n            <div className=\"md:col-span-2\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Content Preferences\n              </label>\n              <div className=\"space-y-2\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.preferences.news}\n                    onChange={(e) => handlePreferenceChange('news', e.target.checked)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">News</span>\n                </label>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.preferences.projects}\n                    onChange={(e) => handlePreferenceChange('projects', e.target.checked)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Projects</span>\n                </label>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.preferences.announcements}\n                    onChange={(e) => handlePreferenceChange('announcements', e.target.checked)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Announcements</span>\n                </label>\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={formData.preferences.blog}\n                    onChange={(e) => handlePreferenceChange('blog', e.target.checked)}\n                    className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-700\">Blog</span>\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-800 px-4 py-3 rounded-lg\">\n              {error}\n            </div>\n          )}\n\n          <div className=\"flex items-center justify-end space-x-4\">\n            <button\n              type=\"button\"\n              onClick={cancelHandler}\n              className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:bg-blue-400\"\n            >\n              {isLoading ? (\n                <>\n                  <span className=\"inline-block w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin mr-2\"></span>\n                  {isCreate ? 'Adding...' : 'Saving...'}\n                </>\n              ) : (\n                <>\n                  <Save className=\"w-4 h-4 mr-2 inline\" />\n                  {isCreate ? 'Add Subscriber' : 'Save Changes'}\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  const renderSubscriberDetail = () => {\n    if (!selectedSubscriber) return null;\n    \n    return (\n      <div className=\"space-y-6\">\n        {/* Header with back button */}\n        <div className=\"flex items-center mb-6\">\n          <button\n            onClick={handleBackToList}\n            className=\"mr-4 p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <X className=\"w-5 h-5\" />\n          </button>\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">{selectedSubscriber.email || 'No Email'}</h2>\n            <p className=\"text-gray-600\">\n              <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(selectedSubscriber.status)}`}>\n                {getStatusIcon(selectedSubscriber.status)}\n                {selectedSubscriber.status}\n              </span>\n            </p>\n          </div>\n        </div>\n        \n        {/* Subscriber Details */}\n       <div className=\"grid lg:grid-cols-2 gap-8\">\n          {/* Basic Info */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Mail className=\"w-5 h-5 mr-2 text-blue-600\" />\n              Subscriber Information\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <p className=\"text-sm text-gray-500\">Email Address</p>\n                <p className=\"text-sm font-medium text-gray-900\">\n                  {selectedSubscriber.email || 'No Email'}\n                </p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm text-gray-500\">Status</p>\n                <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(selectedSubscriber.status)}`}>\n                  {getStatusIcon(selectedSubscriber.status)}\n                  {selectedSubscriber.status}\n                </span>\n              </div>\n              \n              <div>\n                <p className=\"text-sm text-gray-500\">Source</p>\n                <p className=\"text-sm font-medium text-gray-900 capitalize\">\n                  {selectedSubscriber.source || 'Unknown'}\n                </p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm text-gray-500\">Subscribed At</p>\n                <p className=\"text-sm font-medium text-gray-900 flex items-center\">\n                  <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                  {formatDate(selectedSubscriber.subscribed_at)}\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"mt-6 pt-4 border-t border-gray-200\">\n              <div className=\"flex justify-end space-x-2\">\n                <button\n                  onClick={() => handleEditClick(selectedSubscriber)}\n                  className=\"px-3 py-1 bg-blue-100 text-blue-700 rounded-lg text-sm font-medium flex items-center\"\n                >\n                  <Edit className=\"w-4 h-4 mr-1\" />\n                  Edit Subscriber\n                </button>\n                <button\n                  onClick={() => handleDeleteClick(selectedSubscriber)}\n                  className=\"px-3 py-1 bg-red-100 text-red-700 rounded-lg text-sm font-medium flex items-center\"\n                >\n                  <Trash2 className=\"w-4 h-4 mr-1\" />\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n          \n          {/* Preferences */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Filter className=\"w-5 h-5 mr-2 text-purple-600\" />\n              Content Preferences\n            </h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-700\">News</span>\n                {selectedSubscriber.preferences?.news ? (\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                ) : (\n                  <XCircle className=\"w-5 h-5 text-red-500\" />\n                )}\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-700\">Projects</span>\n                {selectedSubscriber.preferences?.projects ? (\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                ) : (\n                  <XCircle className=\"w-5 h-5 text-red-500\" />\n                )}\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-700\">Announcements</span>\n                {selectedSubscriber.preferences?.announcements ? (\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                ) : (\n                  <XCircle className=\"w-5 h-5 text-red-500\" />\n                )}\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-gray-700\">Blog</span>\n                {selectedSubscriber.preferences?.blog ? (\n                  <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                ) : (\n                  <XCircle className=\"w-5 h-5 text-red-500\" />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* Activity History */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900 flex items-center\">\n              <Clock className=\"w-5 h-5 mr-2 text-blue-600\" />\n              Activity History\n            </h3>\n          </div>\n          \n          <div className=\"text-center py-8\">\n            <Clock className=\"w-12 h-12 text-gray-300 mx-auto mb-2\" />\n            <p className=\"text-gray-500 mb-4\">No activity history available</p>\n            <button className=\"px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium\">\n              Send Test Email\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  // Don't render on server-side to prevent hydration issues\n  if (!isClient) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading Subscriber Management...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (viewMode === 'detail') {\n    return (\n      <>\n        {renderSubscriberDetail()}\n        {isClient && <ToastContainer position=\"top-right\" autoClose={3000} />}\n      </>\n    );\n  }\n\n  return (\n    <div>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Newsletter Subscribers</h1>\n          <p className=\"text-gray-600\">\n            Manage your email newsletter subscribers\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={handleRefresh}\n            className=\"px-4 py-2 bg-white border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors flex items-center\"\n          >\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\n            Refresh\n          </button>\n          <button\n            onClick={handleExportSubscribers}\n            className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors flex items-center\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            Export\n          </button>\n          <button\n            onClick={handleCreateClick}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium flex items-center\"\n          >\n            <Plus className=\"w-5 h-5 mr-2\" />\n            Add Subscriber\n          </button>\n        </div>\n      </div>\n\n      {/* Create/Edit Form */}\n      {showCreateForm && renderSubscriberForm(true)}\n      {editingSubscriber && renderSubscriberForm(false)}\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n         <div className=\"grid lg:grid-cols-4 gap-8\">\n          {/* Search */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search by email...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n\n          {/* Status Filter */}\n          <div>\n            <select\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Statuses</option>\n              <option value=\"active\">Active</option>\n              <option value=\"unsubscribed\">Unsubscribed</option>\n              <option value=\"bounced\">Bounced</option>\n              <option value=\"complained\">Complained</option>\n            </select>\n          </div>\n\n          {/* Source Filter */}\n          <div>\n            <select\n              value={sourceFilter}\n              onChange={(e) => setSourceFilter(e.target.value)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            >\n              <option value=\"all\">All Sources</option>\n              {sources.map(source => (\n                <option key={source} value={source}>\n                  {source ? source.charAt(0).toUpperCase() + source.slice(1) : ''}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Subscribers Table */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"text-center\">\n              <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n              <p className=\"text-gray-600\">Loading subscribers...</p>\n            </div>\n          </div>\n        ) : filteredSubscribers.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-64\">\n            <Mail className=\"w-12 h-12 text-gray-300 mb-4\" />\n            <p className=\"text-gray-600 mb-2\">No subscribers found</p>\n            <p className=\"text-gray-500 text-sm mb-4\">Try adjusting your filters or add a new subscriber</p>\n            <button\n              onClick={handleCreateClick}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium flex items-center\"\n            >\n              <Plus className=\"w-4 h-4 mr-2\" />\n              Add New Subscriber\n            </button>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\n                <tr>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Source</th>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Subscribed At</th>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Preferences</th>\n                  <th className=\"text-left px-6 py-3 text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {filteredSubscribers.map((subscriber) => (\n                  <tr key={subscriber.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div \n                        className=\"text-sm font-medium text-blue-600 hover:text-blue-800 cursor-pointer\"\n                        onClick={() => handleViewSubscriber(subscriber)}\n                      >\n                        {subscriber.email || 'No Email'}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusColor(subscriber.status)}`}>\n                        {getStatusIcon(subscriber.status)}\n                        {subscriber.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 capitalize\">\n                      {subscriber.source || 'Unknown'}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                      {formatDate(subscriber.subscribed_at)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex space-x-1\">\n                        {subscriber.preferences?.news && (\n                          <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">News</span>\n                        )}\n                        {subscriber.preferences?.projects && (\n                          <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">Projects</span>\n                        )}\n                        {subscriber.preferences?.announcements && (\n                          <span className=\"px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full\">Announcements</span>\n                        )}\n                        {subscriber.preferences?.blog && (\n                          <span className=\"px-2 py-1 bg-orange-100 text-orange-800 text-xs rounded-full\">Blog</span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button\n                          onClick={() => handleViewSubscriber(subscriber)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => handleEditClick(subscriber)}\n                          className=\"text-blue-600 hover:text-blue-900\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                        <button\n                          onClick={() => handleDeleteClick(subscriber)}\n                          className=\"text-red-600 hover:text-red-900\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr> \n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Delete Modal */}\n      {deleteConfirmModalOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n          <div className=\"bg-white rounded-xl shadow-xl max-w-md w-full p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center\">\n              <AlertCircle className=\"w-5 h-5 text-red-500 mr-2\" />\n              Confirm Deletion\n            </h2>\n            <p className=\"text-sm text-gray-600 mb-6\">\n              Are you sure you want to delete{' '}\n              <strong>{subscriberToDelete?.email}</strong>? This action cannot be undone.\n            </p>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setDeleteConfirmModalOpen(false)}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200\"\n              >\n                Cancel\n              </button> \n              <button\n                onClick={confirmDeleteSubscriber}\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Toast Container */}\n      {isClient && <ToastContainer position=\"top-right\" autoClose={3000} />}\n    </div>\n  );\n};\n\nexport default SubscriberManagement;"],"names":[],"mappings":"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","debugId":null}}]
}