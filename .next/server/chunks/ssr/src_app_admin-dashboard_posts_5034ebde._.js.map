{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/posts/post-list/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useEffect, useState } from 'react';\nimport { Plus, Edit, Trash2, Eye, Search, Filter, Clock, Calendar, CheckCircle, Share2 } from 'lucide-react';\nimport { useSettings } from '../../../../contexts/SettingsContext';\nimport { useSocialShare } from '../../../../contexts/SocialShareContext';\nimport { Post } from '../../../../types/Post';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { supabase } from \"../../../../lib/supabase\";\n\ninterface PostListProps {\n  onCreatePost: () => void;\n  onEditPost: (post: Post) => void;\n}\n\nconst PostList: React.FC<PostListProps> = ({ onCreatePost, onEditPost }) => {\n  const { settings, formatDate, formatTime } = useSettings();\n  const { shareToAllPlatforms, sendEmailNotification, isSharing } = useSocialShare();\n\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState<'all' | 'published' | 'draft' | 'scheduled'>('all');\n  const [filterCategory, setFilterCategory] = useState<'all' | Post['category']>('all');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sharingPostId, setSharingPostId] = useState<string | null>(null);\n  const [postToDelete, setPostToDelete] = useState<Post | null>(null);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isClient, setIsClient] = useState(false);\n\n  // Client-side hydration check\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Fetch posts from Supabase (client-side only)\n  useEffect(() => {\n    if (!isClient) return;\n\n    const fetchPosts = async () => {\n      try {\n        setIsLoading(true);\n        console.log('🔄 Fetching posts from Supabase...');\n        \n        const { data, error } = await supabase\n          .from('posts')\n          .select('*')\n          .order('created_at', { ascending: false });\n\n        if (error) {\n          console.error('❌ Supabase fetch error:', error);\n          toast.error('Failed to load posts from database.');\n          \n          // Fallback to localStorage if Supabase fails\n          try {\n            const localPosts = localStorage.getItem('slk_posts');\n            if (localPosts) {\n              const parsedPosts = JSON.parse(localPosts);\n              setPosts(parsedPosts);\n              toast.info('Loading posts from local storage.');\n            }\n          } catch (localError) {\n            console.error('❌ Local storage fallback error:', localError);\n          }\n        } else {\n          console.log('✅ Posts fetched from Supabase:', data?.length || 0);\n          setPosts(data || []);\n          \n          // Also save to localStorage as backup\n          if (data) {\n            try {\n              localStorage.setItem('slk_posts', JSON.stringify(data));\n            } catch (storageError) {\n              console.warn('Warning: Could not save posts to localStorage:', storageError);\n            }\n          }\n        }\n      } catch (fetchError) {\n        console.error('❌ General fetch error:', fetchError);\n        toast.error('An error occurred while loading posts.');\n        \n        // Final fallback to localStorage\n        try {\n          const localPosts = localStorage.getItem('slk_posts');\n          if (localPosts) {\n            const parsedPosts = JSON.parse(localPosts);\n            setPosts(parsedPosts);\n            toast.info('Loading posts from local storage.');\n          }\n        } catch (localError) {\n          console.error('❌ Final fallback error:', localError);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, [isClient]);\n\n  // Filter posts based on search and filter criteria\n  const filteredPosts = posts.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.content?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt?.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || post.status === filterStatus;\n    const matchesCategory = filterCategory === 'all' || post.category === filterCategory;\n\n    return matchesSearch && matchesStatus && matchesCategory;\n  });\n\n  // Pagination calculations\n  const totalPages = Math.ceil(filteredPosts.length / settings.postsPerPage);\n  const startIndex = (currentPage - 1) * settings.postsPerPage;\n  const paginatedPosts = filteredPosts.slice(startIndex, startIndex + settings.postsPerPage);\n\n  // Reset to first page when filters change\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm, filterStatus, filterCategory]);\n\n  // Delete post with enhanced error handling\n  const handleDeletePost = async (post: Post) => {\n    if (!isClient) return;\n\n    setIsDeleting(true);\n    \n    try {\n      // Try to delete from Supabase first\n      const { error } = await supabase.from('posts').delete().eq('id', post.id);\n\n      if (error) {\n        console.error('❌ Supabase delete error:', error.message);\n        toast.error('Failed to delete post from database. Removing locally...');\n        \n        // If Supabase fails, still remove from local state\n        setPosts(prev => prev.filter(p => p.id !== post.id));\n        \n        // Update localStorage\n        try {\n          const updatedPosts = posts.filter(p => p.id !== post.id);\n          localStorage.setItem('slk_posts', JSON.stringify(updatedPosts));\n        } catch (storageError) {\n          console.warn('Warning: Could not update localStorage:', storageError);\n        }\n        \n        toast.success('Post removed from local view.');\n      } else {\n        // Successfully deleted from Supabase\n        setPosts(prev => prev.filter(p => p.id !== post.id));\n        \n        // Update localStorage\n        try {\n          const updatedPosts = posts.filter(p => p.id !== post.id);\n          localStorage.setItem('slk_posts', JSON.stringify(updatedPosts));\n        } catch (storageError) {\n          console.warn('Warning: Could not update localStorage:', storageError);\n        }\n        \n        toast.success('Post deleted successfully!');\n        console.log('✅ Post deleted successfully:', post.title);\n      }\n    } catch (deleteError) {\n      console.error('❌ Delete operation error:', deleteError);\n      toast.error('An error occurred while deleting the post.');\n    } finally {\n      setIsDeleting(false);\n      setPostToDelete(null);\n    }\n  };\n\n  // Share post with enhanced error handling\n  const handleSharePost = async (post: Post) => {\n    if (!isClient) return;\n\n    if (post.status !== 'published') {\n      toast.warning('Only published posts can be shared');\n      return;\n    }\n\n    setSharingPostId(post.id);\n\n    try {\n      console.log('🔄 Sharing post:', post.title);\n      \n      const socialResults = await shareToAllPlatforms(post);\n      const emailResult = await sendEmailNotification(post);\n\n      const successCount = Object.values(socialResults).filter(Boolean).length + (emailResult ? 1 : 0);\n      const totalOperations = Object.keys(socialResults).length + 1;\n\n      if (successCount === totalOperations) {\n        toast.success('Post shared to all platforms and email sent successfully!');\n        console.log('✅ Post shared successfully to all platforms');\n      } else if (successCount > 0) {\n        toast.info(`Post shared to ${successCount} out of ${totalOperations} platforms`);\n        console.log(`✅ Post shared to ${successCount}/${totalOperations} platforms`);\n      } else {\n        toast.error('Failed to share post. Please try again.');\n        console.log('❌ Post sharing failed completely');\n      }\n    } catch (error) {\n      console.error('❌ Error sharing post:', error);\n      toast.error('An error occurred while sharing the post');\n    } finally {\n      setSharingPostId(null);\n    }\n  };\n\n  // Status color helper\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'published':\n        return 'bg-green-100 text-green-800';\n      case 'scheduled':\n        return 'bg-purple-100 text-purple-800';\n      case 'draft':\n        return 'bg-orange-100 text-orange-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Status icon helper\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'published':\n        return <CheckCircle className=\"w-3 h-3 mr-1\" />;\n      case 'scheduled':\n        return <Clock className=\"w-3 h-3 mr-1\" />;\n      case 'draft':\n        return <Calendar className=\"w-3 h-3 mr-1\" />;\n      default:\n        return null;\n    }\n  };\n\n  // Format post date with proper fallbacks\n  const formatPostDate = (post: Post) => {\n    try {\n      const createdAt = post.created_at;\n      const publishedAt = post.published_at;\n      const scheduledAt = post.scheduled_at;\n\n      if (post.status === 'scheduled' && scheduledAt) {\n        return `Scheduled: ${formatDate(scheduledAt)} ${formatTime(scheduledAt)}`;\n      } else if (post.status === 'published' && publishedAt) {\n        return `Published: ${formatDate(publishedAt)} ${formatTime(publishedAt)}`;\n      } else if (createdAt) {\n        return `Created: ${formatDate(createdAt)}`;\n      } else {\n        return 'Date not available';\n      }\n    } catch (error) {\n      console.warn('Error formatting post date:', error);\n      return 'Date not available';\n    }\n  };\n\n  // Don't render on server-side to prevent hydration issues\n  if (!isClient) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading posts...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"min-h-96 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-12 h-12 border-4 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 text-lg\">Loading posts...</p>\n          <p className=\"text-gray-500 text-sm mt-2\">Fetching from database</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`${settings.showAnimations ? 'animate-fade-in' : ''}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Posts</h1>\n          <p className=\"text-gray-600\">\n            Manage your blog posts and announcements ({filteredPosts.length} total)\n          </p>\n        </div>\n        <button\n          onClick={onCreatePost}\n          className=\"text-white px-6 py-3 rounded-lg font-semibold flex items-center transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl\"\n          style={{ backgroundColor: settings.primaryColor } as React.CSSProperties}\n        >\n          <Plus className=\"w-5 h-5 mr-2\" />\n          New Post\n        </button>\n      </div>\n\n      {/* Filters */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-6\">\n        <div className=\"grid lg:grid-cols-4 gap-8\">\n          {/* Search Bar */}\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search posts...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all\"\n            />\n          </div>\n\n          {/* Status Filter - match search bar width */}\n          <div className=\"relative\">\n            \n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value as any)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"published\">Published</option>\n              <option value=\"scheduled\">Scheduled</option>\n              <option value=\"draft\">Draft</option>\n            </select>\n          </div>\n          \n          <div>\n            <select\n              value={filterCategory}\n              onChange={(e) => setFilterCategory(e.target.value as any)}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all\"\n            >\n              <option value=\"all\">All Categories</option>\n              <option value=\"news\">News</option>\n              <option value=\"project\">Project</option>\n              <option value=\"announcement\">Announcement</option>\n              <option value=\"blog\">Blog</option>\n            </select>\n          </div>\n\n          <div className=\"flex items-center text-sm text-gray-600\">\n            <span>Showing {settings.postsPerPage} per page</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Posts Table */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n        {paginatedPosts.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-50 border-b border-gray-200\">\n                <tr>\n                  <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Title</th>\n                  <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Category</th>\n                  <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Status</th>\n                  <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Date</th>\n                  <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"divide-y divide-gray-200\">\n                {paginatedPosts.map((post, index) => (\n                  <tr key={post.id} className=\"hover:bg-gray-50 transition-colors duration-200\">\n                    <td className=\"px-6 py-4\">\n                      <div>\n                        <h3 className=\"font-medium text-gray-900 mb-1\">{post.title}</h3>\n                        <p className=\"text-sm text-gray-600 line-clamp-2\">{post.excerpt}</p>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 capitalize text-sm text-gray-600\">{post.category}</td>\n                    <td className=\"px-6 py-4\">\n                      <span className={`px-3 py-1 rounded-full text-xs font-medium flex items-center w-fit ${getStatusColor(post.status)}`}>\n                        {getStatusIcon(post.status)}\n                        {post.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 text-sm text-gray-600\">{formatPostDate(post)}</td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <button \n                          onClick={() => onEditPost(post)} \n                          className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-all duration-200\" \n                          title=\"Edit Post\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </button>\n                        \n                        <button\n                          onClick={() => setPostToDelete(post)}\n                          className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-all duration-200\"\n                          title=\"Delete Post\"\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </button>\n\n                        {post.status === 'published' && (\n                          <button\n                            onClick={() => handleSharePost(post)}\n                            disabled={isSharing || sharingPostId === post.id}\n                            className=\"p-2 text-green-600 hover:bg-green-50 rounded-lg disabled:opacity-50 transition-all duration-200\"\n                            title=\"Share to Social Media & Email\"\n                          >\n                            {sharingPostId === post.id ? \n                              <Clock className=\"w-4 h-4 animate-spin\" /> : \n                              <Share2 className=\"w-4 h-4\" />\n                            }\n                          </button>\n                        )}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <Eye className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-600 mb-4\">\n              {posts.length === 0 ? 'No posts found' : 'No posts match your current filters'}\n            </p>\n            {posts.length === 0 ? (\n              <button\n                onClick={onCreatePost}\n                className=\"text-white px-6 py-2 rounded-lg font-medium transition-all duration-200 transform hover:scale-105\"\n                style={{ backgroundColor: settings.primaryColor }}\n              >\n                Create Your First Post\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  setSearchTerm('');\n                  setFilterStatus('all');\n                  setFilterCategory('all');\n                }}\n                className=\"text-orange-600 hover:text-orange-700 font-medium\"\n              >\n                Clear all filters\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* Pagination */}\n        {totalPages > 1 && (\n          <div className=\"px-6 py-4 border-t border-gray-200 flex items-center justify-between\">\n            <div className=\"text-sm text-gray-600\">\n              Showing {startIndex + 1} to {Math.min(startIndex + settings.postsPerPage, filteredPosts.length)} of {filteredPosts.length} posts\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={() => setCurrentPage(Math.max(1, currentPage - 1))}\n                disabled={currentPage === 1}\n                className=\"px-3 py-1 border border-gray-300 rounded text-sm disabled:opacity-50 hover:bg-gray-50 transition-colors\"\n              >\n                Previous\n              </button>\n              <span className=\"text-sm text-gray-600\">Page {currentPage} of {totalPages}</span>\n              <button\n                onClick={() => setCurrentPage(Math.min(totalPages, currentPage + 1))}\n                disabled={currentPage === totalPages}\n                className=\"px-3 py-1 border border-gray-300 rounded text-sm disabled:opacity-50 hover:bg-gray-50 transition-colors\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Delete Confirmation Modal */}\n      {postToDelete && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\">\n          <div className=\"bg-white rounded-2xl shadow-2xl max-w-md w-full mx-4 p-6 transform transition-all duration-300 scale-100 pointer-events-auto\">\n            <div className=\"text-center mb-6\">\n              <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Trash2 className=\"w-8 h-8 text-red-600\" />\n              </div>\n              <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Delete Post</h2>\n              <p className=\"text-gray-600\">\n                Are you sure you want to delete{' '}\n                <span className=\"font-medium text-black\">\"{postToDelete.title}\"</span>?{' '}\n                This action cannot be undone.\n              </p>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setPostToDelete(null)}\n                disabled={isDeleting}\n                className=\"px-4 py-2 text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors disabled:opacity-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => handleDeletePost(postToDelete)}\n                disabled={isDeleting}\n                className=\"px-4 py-2 text-white bg-red-600 rounded-lg hover:bg-red-700 transition-colors disabled:opacity-50 flex items-center\"\n              >\n                {isDeleting ? (\n                  <>\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                    Deleting...\n                  </>\n                ) : (\n                  'Delete Post'\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/posts/post-editor/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { Save, ArrowLeft, Eye, Image, Clock, Calendar, Share2, Facebook, Instagram, Linkedin, Mail, Loader } from 'lucide-react';\nimport { PostProvider, usePost } from '../../../../contexts/PostContext';\nimport { SocialShareProvider, useSocialShare } from '../../../../contexts/SocialShareContext';\nimport { Post, PostFormData } from '../../../../types/Post';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { supabase } from \"../../../../lib/supabase\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\ninterface PostEditorProps {\n  post?: Post;\n  onBack: () => void; \n}\n\nconst PostEditor: React.FC<PostEditorProps> = ({ post, onBack }) => {\n  const { addPost, updatePost } = usePost();\n  const { shareToFacebook, isSharing } = useSocialShare();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n  const [formData, setFormData] = useState<PostFormData>({\n    title: '',\n    content: '',\n    excerpt: '',\n    category: 'news',\n    status: 'published',\n    featuredImage: '',\n    tags: [],\n    scheduledAt: ''\n  });\n  const [tagInput, setTagInput] = useState('');\n  const [showSocialOptions, setShowSocialOptions] = useState(false);\n  const [socialOptions, setSocialOptions] = useState({\n    facebook: true,\n    instagram: true,\n    linkedin: true,\n    email: true \n  });\n\n  // Client-side hydration check\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Initialize form data when post prop changes\n  useEffect(() => {\n    if (post) {\n      setFormData({\n        title: post.title || '',\n        content: post.content || '',\n        excerpt: post.excerpt || '',\n        category: post.category || 'news',\n        status: post.status || 'published',\n        featuredImage: post.featuredImage || '',\n        tags: Array.isArray(post.tags) ? post.tags : [],\n        scheduledAt: post.scheduledAt || ''\n      });\n    } else {\n      setFormData({\n        title: '',\n        content: '',\n        excerpt: '',\n        category: 'news',\n        status: 'published',\n        featuredImage: '',\n        tags: [],\n        scheduledAt: ''\n      });\n    }\n  }, [post]);\n\n  // Don't render on server-side to prevent hydration issues\n  if (!isClient) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading editor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n\n    try {\n      // Validate scheduled date if status is scheduled\n      if (formData.status === 'scheduled') {\n        if (!formData.scheduledAt) {\n          toast.error('Please select a scheduled date and time');\n          setIsLoading(false);\n          return;\n        }\n        const scheduledDate = new Date(formData.scheduledAt);\n        const now = new Date();\n        if (scheduledDate <= now) {\n          toast.error('Scheduled date must be in the future');\n          setIsLoading(false);\n          return; \n        } \n      }\n\n      let savedPost: Post;\n      \n      if (post && post.id) {\n        // Prepare update object\n        const updatePayload: any = {\n          title: formData.title,\n          content: formData.content,\n          excerpt: formData.excerpt,\n          category: formData.category,\n          status: formData.status,\n          tags: formData.tags,\n          scheduled_at: formData.status === 'scheduled' ? formData.scheduledAt : null,\n          updated_at: new Date().toISOString(),\n        };\n\n        // Only update featured_image if a new one is provided, otherwise keep existing\n        if (formData.featuredImage && formData.featuredImage.trim() !== \"\") {\n          updatePayload.featured_image = formData.featuredImage;\n        }\n\n        const { error } = await supabase\n          .from('posts')\n          .update(updatePayload)\n          .eq('id', post.id);\n\n        if (error) {\n          toast.error(error.message);\n          return;\n        }\n        updatePost(post.id, { ...formData, featuredImage: updatePayload.featured_image ?? post.featured_image });\n        toast.success('Post updated!');\n      } else {\n        // Insert new post\n        const newPost: Post = {\n          id: uuidv4(),\n          title: formData.title,\n          content: formData.content,\n          excerpt: formData.excerpt,\n          category: formData.category,\n          status: formData.status,\n          featured_image: formData.featuredImage, // <-- FIXED\n          tags: formData.tags,\n          author: 'SLK Admin',\n          created_at: new Date().toISOString(),\n          updated_at: new Date().toISOString(),\n          published_at: formData.status === 'published' ? new Date().toISOString() : undefined,\n          scheduled_at: formData.status === 'scheduled' ? formData.scheduledAt : undefined\n        };\n\n        try {\n          const payload = {\n            id: newPost.id,\n            title: newPost.title,\n            content: newPost.content,\n            excerpt: newPost.excerpt,\n            category: newPost.category,\n            status: newPost.status,\n            featured_image: newPost.featured_image, // <-- snake_case\n            tags: newPost.tags,\n            author: newPost.author,\n            published_at: newPost.published_at,\n            scheduled_at: newPost.scheduled_at,\n            created_at: newPost.created_at,\n            updated_at: newPost.updated_at,\n          };\n\n          console.log('Payload:', payload);\n\n          const { data, error } = await supabase\n            .from('posts')\n            .insert([payload])\n            .select()\n            .single();\n\n          if (error) {\n            toast.error(error.message);\n            return;\n          }\n          addPost(data); // Use the returned data from Supabase\n          toast.success('Post created!');\n        } catch (error) {\n          console.warn('Supabase not available:', error);\n          toast.error('Supabase not available');\n          addPost(newPost);\n          savedPost = newPost;\n        }\n      }\n      \n      // Show success message\n      toast.success(`Post ${post ? 'updated' : 'created'} successfully!`);\n      \n      // If post is published, show social sharing options\n      if (formData.status === 'published') {\n        setShowSocialOptions(true);\n      } else {\n        onBack();\n      } \n    } catch (error) {\n      console.error('❌ Error saving post:', error);\n      toast.error('Failed to save post. Please try again.');\n    } finally {\n      setIsLoading(false);\n    } \n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value ?? \"\"\n    }));\n  };\n \n  const addTag = () => {\n    if (tagInput.trim() && !formData.tags.includes(tagInput.trim())) {\n      setFormData(prev => ({\n        ...prev,\n        tags: [...prev.tags, tagInput.trim()]\n      }));\n      setTagInput('');\n    }\n  };\n\n  const removeTag = (tagToRemove: string) => {\n    setFormData(prev => ({\n      ...prev,\n      tags: prev.tags.filter(tag => tag !== tagToRemove)\n    }));\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      addTag();\n    }\n  };\n\n  const getMinScheduleDateTime = () => {\n    if (!isClient) return '';\n    const now = new Date();\n    now.setMinutes(now.getMinutes() + 1);\n    return now.toISOString().slice(0, 16);\n  };\n\n  const handleSocialOptionChange = (platform: keyof typeof socialOptions) => {\n    setSocialOptions(prev => ({\n      ...prev,\n      [platform]: !prev[platform]\n    }));\n  };\n\n  const handleFileUpload = async (file: File) => {\n    if (!file) return;\n    if (file.size > 5 * 1024 * 1024) {\n      toast.error('File size must be less than 5MB');\n      return;\n    }\n    if (!file.type.startsWith('image/')) {\n      toast.error('Please select an image file');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const fileExt = file.name.split('.').pop();\n      const fileName = `hero_${Date.now()}.${fileExt}`;\n      const filePath = `hero/${fileName}`;\n      try {\n        const { error: uploadError } = await supabase.storage\n          .from('post-images')\n          .upload(filePath, file);\n        if (uploadError) throw uploadError;\n        const { data } = supabase.storage\n          .from('post-images')\n          .getPublicUrl(filePath);\n        if (data?.publicUrl) {\n          setFormData(prev => ({\n            ...prev,\n            featuredImage: data.publicUrl || \"\",\n          }));\n          toast.success('✅ Image uploaded successfully!');\n        }\n      } catch (supabaseError) {\n        console.warn('Supabase upload failed, using local base64:', supabaseError);\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const result = e.target?.result as string;\n          setFormData(prev => ({\n            ...prev,\n            featuredImage: result || \"\",\n          }));\n          toast.success('✅ Image loaded successfully!');\n        };\n        reader.readAsDataURL(file);\n      }\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      toast.error('❌ Failed to upload image.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleShareToSocial = async () => {\n    setIsLoading(true);\n    try {\n      // Always fetch the latest post (most recently created/updated)\n      const { data: latestPost, error: postError } = await supabase\n        .from('posts')\n        .select('*')\n        .order('created_at', { ascending: false })\n        .limit(1)\n        .single();\n\n      if (postError || !latestPost) {\n        toast.error('Failed to fetch the latest post for sharing');\n        setIsLoading(false);\n        return;\n      }\n\n      const postToShare = latestPost;\n\n\n      // Send email to all subscribers (if checked)\n      if (socialOptions.email) {\n        const { data: subscribers, error } = await supabase\n          .from('newsletter_subscribers')\n          .select('email');\n        if (error) throw error;\n        const emails = subscribers.map((s) => s.email);\n\n        const res = await fetch('/api/send-newsletter', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ emails, post: postToShare }),\n        });\n        if (!res.ok) throw new Error('Failed to send email newsletter');\n      }\n\n        // Share to Facebook (if checked)\n     if (socialOptions.facebook) {\n      const fbResult = await shareToFacebook(postToShare);\n      if (!fbResult) {\n        toast.error('Facebook sharing failed. Check your credentials and API route.');\n        return;\n      }\n    }\n\n      toast.success('Shared successfully!');\n    setShowSocialOptions(false);\n    onBack();\n  } catch (error) {\n    console.error('❌ Error in handleShareToSocial:', error);\n    toast.error('Failed to share');\n  } finally {\n    setIsLoading(false);\n  }\n};\n\n  return (\n    <div>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div className=\"flex items-center\">\n          <button\n            onClick={onBack}\n            className=\"mr-4 p-2 text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n          >\n            <ArrowLeft className=\"w-5 h-5\" />\n          </button> \n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              {post ? 'Edit Post' : 'Create New Post'}\n            </h1>\n            <p className=\"text-gray-600\">\n              {post ? 'Update your existing post' : 'Write and publish a new post'}\n            </p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            type=\"button\"\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium transition-colors\"\n          >\n            <Eye className=\"w-4 h-4 mr-2 inline\" />\n            Preview\n          </button>\n          <button\n            form=\"post-form\"\n            type=\"submit\"\n            disabled={isLoading}\n            className=\"bg-orange-500 hover:bg-orange-600 disabled:bg-orange-300 text-white px-6 py-2 rounded-lg font-medium flex items-center transition-colors\"\n          >\n            {isLoading ? (\n              <>\n                <Loader className=\"w-4 h-4 mr-2 animate-spin\" />\n                Saving...\n              </>\n            ) : (\n              <>\n                <Save className=\"w-4 h-4 mr-2\" />\n                Save Post\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      {/* Form */}\n      <form id=\"post-form\" onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Main Content (Left) */}\n          <div className=\"flex flex-col gap-6 lg:col-span-2\">\n            {/* Post Title */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Post Title *\n              </label>\n              <input\n                type=\"text\"\n                name=\"title\"\n                value={formData.title || \"\"}\n                onChange={handleChange}\n                required\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent text-lg placeholder-gray-500\"\n                placeholder=\"Enter post title...\"\n              />\n            </div>\n\n            {/* Post Content */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Content *\n              </label>\n              <textarea\n                name=\"content\"\n                value={formData.content || \"\"}\n                onChange={handleChange}\n                required\n                rows={15}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none placeholder-gray-500\"\n                placeholder=\"Write your post content here...\"\n              />\n            </div>\n\n            {/* Excerpt */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Excerpt\n              </label>\n              <textarea\n                name=\"excerpt\"\n                value={formData.excerpt || \"\"}\n                onChange={handleChange}\n                rows={3}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent resize-none placeholder-gray-500\"\n                placeholder=\"Brief description of the post...\"\n              />\n              <p className=\"text-sm text-gray-500 mt-2\">\n                A short summary that will appear in post listings\n              </p>\n            </div>\n          </div>\n\n          {/* Sidebar (Right) */}\n          <div className=\"flex flex-col gap-6 self-start sticky top-8\">\n            {/* Publish Settings */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Publish Settings</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Status\n                  </label>\n                  <select\n                    name=\"status\"\n                    value={formData.status || \"\"}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent text-gray-900\"\n                    required\n                  >\n                    <option value=\"\" disabled className=\"text-gray-400\">Select status...</option>\n                    <option value=\"draft\">Draft</option>\n                    <option value=\"published\">Published</option>\n                    <option value=\"scheduled\">Scheduled</option>\n                  </select>\n                </div>\n\n                {/* Schedule Date/Time */}\n                {formData.status === 'scheduled' && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      <Clock className=\"w-4 h-4 inline mr-1\" />\n                      Schedule Date & Time *\n                    </label>\n                    <input\n                      type=\"datetime-local\"\n                      name=\"scheduledAt\"\n                      value={formData.scheduledAt || \"\"}\n                      onChange={handleChange}\n                      min={getMinScheduleDateTime()}\n                      required={formData.status === 'scheduled'}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Post will be automatically published at this time\n                    </p>\n                  </div>\n                )}\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Category\n                  </label>\n                  <select\n                    name=\"category\"\n                    value={formData.category || \"\"}\n                    onChange={handleChange}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent text-gray-900\"\n                    required\n                  >\n                    <option value=\"\" disabled className=\"text-gray-400\">Select category...</option>\n                    <option value=\"news\">News</option>\n                    <option value=\"project\">Project</option>\n                    <option value=\"announcement\">Announcement</option>\n                    <option value=\"blog\">Blog</option>\n                  </select>\n                </div>\n\n                {/* Social Media Sharing Options */}\n                {formData.status === 'published' && (\n                  <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                    <div className=\"flex items-center text-blue-700 mb-2\">\n                      <Share2 className=\"w-4 h-4 mr-2\" />\n                      <span className=\"font-medium\">Auto-Share When Published</span>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={!!socialOptions.facebook}\n                          onChange={() => handleSocialOptionChange('facebook')}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <Facebook className=\"w-4 h-4 mx-2 text-blue-600\" />\n                        <span className=\"text-sm text-blue-800\">Share to Facebook</span>\n                      </label>\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={!!socialOptions.instagram}\n                          onChange={() => handleSocialOptionChange('instagram')}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <Instagram className=\"w-4 h-4 mx-2 text-pink-600\" />\n                        <span className=\"text-sm text-blue-800\">Share to Instagram</span>\n                      </label>\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={!!socialOptions.linkedin}\n                          onChange={() => handleSocialOptionChange('linkedin')}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <Linkedin className=\"w-4 h-4 mx-2 text-blue-700\" />\n                        <span className=\"text-sm text-blue-800\">Share to LinkedIn</span>\n                      </label>\n                      <label className=\"flex items-center\">\n                        <input\n                          type=\"checkbox\"\n                          checked={!!socialOptions.email}\n                          onChange={() => handleSocialOptionChange('email')}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <Mail className=\"w-4 h-4 mx-2 text-gray-600\" />\n                        <span className=\"text-sm text-blue-800\">Send Email to Subscribers</span>\n                      </label>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Status Info */}\n              {formData.status === 'scheduled' && formData.scheduledAt && isClient && (\n                <div className=\"mt-4 p-3 bg-purple-50 border border-purple-200 rounded-lg\">\n                  <div className=\"flex items-center text-purple-700\">\n                    <Calendar className=\"w-4 h-4 mr-2\" />\n                    <span className=\"text-sm font-medium\">Scheduled for:</span>\n                  </div>\n                  <p className=\"text-sm text-purple-600 mt-1\">\n                    {new Date(formData.scheduledAt).toLocaleString()}\n                  </p>\n                </div>\n              )}\n            </div>\n\n            {/* Hero / Featured Image */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Hero / Featured Image</h3>\n\n              <div className=\"space-y-4\">\n                {/* Upload Button */}\n                <div className=\"flex items-center justify-between gap-4\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      if (isClient) {\n                        document.getElementById('hero-upload')?.click();\n                      }\n                    }}\n                    className=\"w-full flex justify-center items-center gap-2 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\n                    disabled={isLoading}\n                  >\n                    <Image className=\"w-4 h-4\" />\n                    {isLoading ? 'Uploading...' : 'Upload Hero Image'}\n                  </button>\n\n                  <input\n                    id=\"hero-upload\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"hidden\"\n                    onChange={(e) => {\n                      const file = e.target.files?.[0];\n                      if (file) {\n                        handleFileUpload(file);\n                      }\n                    }}\n                  />\n                </div>\n\n                {/* Manual Image URL */}\n                <input\n                  type=\"url\"\n                  name=\"featuredImage\"\n                  value={formData.featuredImage || \"\"}\n                  onChange={handleChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent placeholder-gray-500\"\n                  placeholder=\"Paste image URL or upload below\"\n                />\n\n                {/* Image Preview */}\n                {formData.featuredImage && (\n                  <div className=\"relative\">\n                    <img\n                      src={formData.featuredImage}\n                      alt=\"Featured\"\n                      className=\"w-full h-32 object-cover rounded-lg\"\n                      onError={(e) => {\n                        e.currentTarget.style.display = 'none';\n                      }}\n                    />\n                  </div>\n                )}\n\n                {/* Placeholder */}\n                {!formData.featuredImage && (\n                  <div className=\"text-center\">\n                    <Image className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\n                    <p className=\"text-sm text-gray-500\">\n                      Upload or paste a URL for the hero image\n                    </p>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Tags */}\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tags</h3>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex\">\n                  <input\n                    type=\"text\"\n                    value={tagInput || \"\"}\n                    onChange={(e) => setTagInput(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    className=\"flex-1 px-3 py-2 border border-gray-300 rounded-l-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent placeholder-gray-500\"\n                    placeholder=\"Add a tag and press Enter\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={addTag}\n                    className=\"px-4 py-2 bg-orange-500 text-white rounded-r-lg hover:bg-orange-600 transition-colors\"\n                  >\n                    Add\n                  </button>\n                </div>\n                \n                {formData.tags.length > 0 && (\n                  <div className=\"flex flex-wrap gap-2\">\n                    {formData.tags.map((tag, index) => (\n                      <span\n                        key={index}\n                        className=\"inline-flex items-center px-3 py-1 bg-gray-100 text-gray-700 rounded-full text-sm\"\n                      >\n                        {tag}\n                        <button\n                          type=\"button\"\n                          onClick={() => removeTag(tag)}\n                          className=\"ml-2 text-gray-500 hover:text-red-500\"\n                        >\n                          ×\n                        </button>\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      {/* Social Sharing Modal */}\n      {showSocialOptions && (\n        <div className=\"fixed inset-0 flex items-center justify-center p-4 z-50\">\n          <div className=\"relative max-w-md w-full\">\n            {/* Overlay only behind modal */}\n            <div className=\"absolute inset-0 bg-black bg-opacity-30 rounded-lg pointer-events-none\" />\n            <div className=\"relative bg-white rounded-lg shadow-lg\">\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center\">\n                  <Share2 className=\"w-5 h-5 mr-2 text-blue-600\" />\n                  Share Your Post\n                </h3>\n                \n                <div className=\"mb-6\">\n                  <p className=\"text-gray-600 mb-4\">\n                    Your post has been published successfully! Would you like to share it on social media and send email notifications to subscribers?\n                  </p>\n                  \n                  <div className=\"space-y-3 mb-6\">\n                    <label className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={!!socialOptions.facebook}\n                        onChange={() => handleSocialOptionChange('facebook')}\n                        className=\"h-5 w-5 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <Facebook className=\"w-5 h-5 mx-3 text-blue-600\" />\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Facebook</span>\n                        <p className=\"text-xs text-gray-500\">Share to your Facebook page</p>\n                      </div>\n                    </label>\n                    \n                    <label className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={!!socialOptions.instagram}\n                        onChange={() => handleSocialOptionChange('instagram')}\n                        className=\"h-5 w-5 text-pink-600 focus:ring-pink-500 border-gray-300 rounded\"\n                      />\n                      <Instagram className=\"w-5 h-5 mx-3 text-pink-600\" />\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Instagram</span>\n                        <p className=\"text-xs text-gray-500\">Share to your Instagram feed</p>\n                      </div>\n                    </label>\n                    \n                    <label className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={!!socialOptions.linkedin}\n                        onChange={() => handleSocialOptionChange('linkedin')}\n                        className=\"h-5 w-5 text-blue-700 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <Linkedin className=\"w-5 h-5 mx-3 text-blue-700\" />\n                      <div>\n                        <span className=\"font-medium text-gray-900\">LinkedIn</span>\n                        <p className=\"text-xs text-gray-500\">Share to your LinkedIn profile</p>\n                      </div>\n                    </label>\n                    \n                    <label className=\"flex items-center p-3 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                      <input\n                        type=\"checkbox\"\n                        checked={!!socialOptions.email}\n                        onChange={() => handleSocialOptionChange('email')}\n                        className=\"h-5 w-5 text-gray-600 focus:ring-gray-500 border-gray-300 rounded\"\n                      />\n                      <Mail className=\"w-5 h-5 mx-3 text-gray-600\" />\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Email Newsletter</span>\n                        <p className=\"text-xs text-gray-500\">Send to all subscribers</p>\n                      </div>\n                    </label>\n                  </div>\n                </div>\n                \n                <div className=\"flex justify-end space-x-3\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowSocialOptions(false);\n                      onBack(); // <-- This will navigate back and remove the overlay\n                    }}\n                    className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n                  >\n                    Skip\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={async () => {\n                      await handleShareToSocial();\n                      setShowSocialOptions(false);\n                      onBack();\n                    }}\n                    disabled={isLoading || isSharing}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-blue-400 flex items-center\"\n                  >\n                    {isLoading || isSharing ? (\n                      <>\n                        <Loader className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Sharing...\n                      </>\n                    ) : (\n                      <>\n                        <Share2 className=\"w-4 h-4 mr-2\" />\n                        Share Now\n                      </>\n                    )}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default function PostEditorPage(props) {\n  return (\n    <PostProvider>\n      <SocialShareProvider>\n        <PostEditor {...props} />\n      </SocialShareProvider>\n    </PostProvider>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2671, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/posts/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState } from \"react\";\nimport { SettingsProvider } from '../../../contexts/SettingsContext';\nimport { SocialShareProvider } from '../../../contexts/SocialShareContext';\nimport PostList from './post-list/page';\nimport PostEditor from './post-editor/page'; // Import your PostEditor\nimport { Post } from '../../../types/Post';\n\nexport default function PostsPage() {\n  const [editingPost, setEditingPost] = useState<Post | null>(null);\n\n  // Handler for creating a new post\n  const handleCreatePost = () => setEditingPost({} as Post);\n\n  // Handler for editing an existing post\n  const handleEditPost = (post: Post) => setEditingPost(post);\n\n  // Handler for closing the editor\n  const handleBack = () => setEditingPost(null);\n\n  return (\n    <SettingsProvider>\n      <SocialShareProvider>\n        {editingPost ? (\n          <PostEditor post={editingPost} onBack={handleBack} />\n        ) : (\n          <PostList\n            onCreatePost={handleCreatePost}\n            onEditPost={handleEditPost}\n          />\n        )}\n      </SocialShareProvider>\n    </SettingsProvider>\n  );\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AACA,2RAA6C,yBAAyB;AALtE;;;;;;;AAQe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE5D,kCAAkC;IAClC,MAAM,mBAAmB,IAAM,eAAe,CAAC;IAE/C,uCAAuC;IACvC,MAAM,iBAAiB,CAAC,OAAe,eAAe;IAEtD,iCAAiC;IACjC,MAAM,aAAa,IAAM,eAAe;IAExC,qBACE,8OAAC,mIAAA,CAAA,mBAAgB;kBACf,cAAA,8OAAC,sIAAA,CAAA,sBAAmB;sBACjB,4BACC,8OAAC,oKAAA,CAAA,UAAU;gBAAC,MAAM;gBAAa,QAAQ;;;;;qCAEvC,8OAAC,kKAAA,CAAA,UAAQ;gBACP,cAAc;gBACd,YAAY;;;;;;;;;;;;;;;;AAMxB","debugId":null}}]
}