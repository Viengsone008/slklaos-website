{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/users/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { UserPlus, Edit, Trash2, Eye, EyeOff, User, Mail, Lock, Save, X, CheckCircle, AlertCircle, Shield, ChevronDown } from 'lucide-react';\nimport { supabase } from \"../../../lib/supabase\";\n\ninterface RegisteredUser {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'employee' | 'manager';\n  login_type: 'admin' | 'employee' | 'manager';\n  department?: string;\n  position?: string;\n  created_at: string;\n}\n\nconst UserManagement = () => {\n  const [users, setUsers] = useState<RegisteredUser[]>([]);\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingUser, setEditingUser] = useState<RegisteredUser | null>(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'admin' as 'admin' | 'employee' | 'manager',\n    login_type: 'admin' as 'admin' | 'employee' | 'manager',\n    department: '',\n    position: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isClient, setIsClient] = useState(false);\n  const [newEmail, setNewEmail] = useState('');\n\n  // Predefined options for dropdowns\n  const departmentOptions = [\n    'Construction','Planning','Administration', 'Human Resources', 'Sales & Marketing', 'Materials',\n    'Quality Control', 'IT & Support', 'Safety & Compliance', 'Finance & Accounting',\n    'Procurement', 'Design & Engineering', 'Operations', 'Logistics & Supply Chain',\n    'Legal', 'Business Development', 'Customer Service', 'Project Management'\n  ];\n\n  const positionOptions = {\n    'Construction': ['Construction Manager','Site Engineer', 'CAD Engineer',  'Project Manager', 'Site Supervisor', 'Construction Worker', 'Safety Officer', 'Quality Inspector', 'Foreman'],\n    'Planning': ['Project Planner', 'Scheduler', 'Cost Estimator', 'Planning Engineer', 'Resource Manager'],\n    'IT & Support': ['IT Manager', 'System Administrator', 'Help Desk Technician', 'Network Engineer', 'IT Support Specialist', 'Database Administrator'],\n    'Logistics & Supply Chain': ['Logistics Manager', 'Supply Chain Analyst', 'Warehouse Manager', 'Inventory Control Specialist', 'Shipping Coordinator', 'Procurement Specialist'],\n    'Legal': ['Legal Counsel', 'Contract Manager', 'Compliance Officer', 'Paralegal', 'Legal Assistant'],\n    'Business Development': ['Business Development Manager', 'Sales Executive', 'Market Research Analyst', 'Partnership Manager', 'Account Executive'],\n    'Customer Service': ['Customer Service Manager', 'Customer Support Specialist', 'Call Center Agent', 'Client Relations Specialist', 'Technical Support Specialist'],\n    'Project Management': ['Project Manager', 'Project Coordinator', 'Program Manager', 'Project Analyst', 'Project Scheduler'],\n    'Materials': ['Inventory Specialist', 'Materials Manager', 'Warehouse Supervisor', 'Procurement Officer', 'Quality Control Specialist', 'Logistics Coordinator'],\n    'Design & Engineering': ['CAD Designer', 'Architect', 'Design Manager', 'Structural Engineer', 'Interior Designer', '3D Modeler', 'Technical Draftsman'],\n    'Operations': ['Operations Manager', 'Operations Coordinator', 'Process Analyst', 'Operations Supervisor', 'Facilities Manager'],\n    'Sales & Marketing': ['Sales Manager', 'Sales Representative', 'Account Manager', 'Business Development Manager', 'Sales Coordinator', 'Client Relations Manager','Marketing Manager', 'Marketing Specialist', 'Content Creator', 'Digital Marketing Specialist', 'Brand Manager'],\n    'Administration': ['Administrative Manager','Administrative Assistant', 'Office Manager', 'Executive Assistant', 'Data Entry Clerk', 'Receptionist'],\n    'Quality Control': ['Quality Manager', 'Quality Inspector', 'Quality Analyst', 'Compliance Officer', 'Testing Specialist'],\n    'Safety & Compliance': ['Safety Manager', 'Safety Officer', 'Safety Inspector', 'HSE Coordinator', 'Safety Trainer'],\n    'Finance & Accounting': ['Finance Manager', 'Accountant', 'Financial Analyst', 'Bookkeeper', 'Budget Analyst', 'Payroll Specialist'],\n    'Human Resources': ['HR Manager', 'HR Specialist', 'Recruiter', 'Training Coordinator', 'HR Assistant'],\n    'Procurement': ['Procurement Manager', 'Buyer', 'Vendor Manager', 'Contract Specialist', 'Purchasing Agent']\n  };\n\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  const getPositionOptions = (department: string) => {\n    return positionOptions[department as keyof typeof positionOptions] || [];\n  };\n\n  // Fetch users from Supabase\n  const loadUsers = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const { data, error } = await supabase\n        .from('users')\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        setError('Failed to fetch users from Supabase');\n        setUsers([]);\n        return;\n      }\n      setUsers(data || []);\n    } catch (err) {\n      setError('Error loading users from Supabase');\n      setUsers([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isClient) loadUsers();\n  }, [isClient]);\n\n  const validateForm = () => {\n    if (!formData.name.trim()) {\n      setError('Name is required');\n      return false;\n    }\n    if (!formData.email.trim()) {\n      setError('Email is required');\n      return false;\n    }\n    if (!formData.email.includes('@')) {\n      setError('Please enter a valid email address');\n      return false;\n    }\n    if (!formData.department) {\n      setError('Department is required');\n      return false;\n    }\n    if (!formData.position) {\n      setError('Position is required');\n      return false;\n    }\n    if (!editingUser && !formData.password) {\n      setError('Password is required');\n      return false;\n    }\n    return true;\n  };\n\n  // CREATE or UPDATE user\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    if (!validateForm()) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      if (editingUser) {\n        // UPDATE (only in users table)\n        const { error } = await supabase\n          .from('users')\n          .update({\n            name: formData.name,\n            email: formData.email,\n            role: formData.role,\n            login_type: formData.login_type,\n            department: formData.department,\n            position: formData.position,\n            updated_at: new Date().toISOString()\n          })\n          .eq('id', editingUser.id);\n\n        if (error) {\n          setError('Failed to update user: ' + error.message);\n          setIsLoading(false);\n          return;\n        }\n        setSuccess('User updated successfully!');\n      } else {\n        // CREATE via API route (creates in Auth and users table)\n        const response = await fetch('/api/admin/create-user', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            name: formData.name,\n            email: formData.email,\n            password: formData.password,\n            role: formData.role,\n            loginType: formData.login_type,\n            department: formData.department,\n            position: formData.position,\n          }),\n        });\n        const result = await response.json();\n        if (!response.ok) {\n          setError(result.error || 'Failed to create user');\n          setIsLoading(false);\n          return;\n        }\n        setSuccess(`User \"${formData.name}\" created successfully!`);\n      }\n\n      setFormData({\n        name: '',\n        email: '',\n        password: '',\n        role: 'admin',\n        login_type: 'admin',\n        department: '',\n        position: ''\n      });\n      setShowCreateForm(false);\n      setEditingUser(null);\n      loadUsers();\n      setTimeout(() => setSuccess(''), 5000);\n    } catch (err) {\n      setError('Operation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // EDIT user\n  const handleEdit = (user: RegisteredUser) => {\n    setEditingUser(user);\n    setFormData({\n      name: user.name,\n      email: user.email,\n      password: '',\n      role: user.role,\n      login_type: user.login_type,\n      department: user.department || '',\n      position: user.position || ''\n    });\n    setShowCreateForm(true);\n    setError('');\n    setSuccess('');\n  };\n\n  // DELETE user\n  const handleDelete = async (userId: string) => {\n    if (!window.confirm('Are you sure you want to delete this user?')) return;\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const response = await fetch('/api/admin/delete-user', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id: userId }),\n      });\n      const result = await response.json();\n      if (!response.ok) {\n        setError(result.error || 'Failed to delete user');\n        setIsLoading(false);\n        return;\n      }\n      setSuccess('User deleted successfully!');\n      loadUsers();\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Error deleting user');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setShowCreateForm(false);\n    setEditingUser(null);\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      role: 'admin',\n      login_type: 'admin',\n      department: '',\n      position: ''\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    if (name === 'department') {\n      setFormData({\n        ...formData,\n        [name]: value,\n        position: ''\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n    if (error) setError('');\n  };\n\n  const handleChangeEmail = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    const { error } = await supabase.auth.updateUser({ email: newEmail });\n    if (error) {\n      setError(error.message);\n    } else {\n      setSuccess(\"Email updated! Please check your inbox to confirm.\");\n    }\n    setIsLoading(false);\n  };\n\n  if (!isClient) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading User Management...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">User Management</h1>\n          <p className=\"text-gray-600\">Manage users across all login types (Admin, Employee, Manager)</p>\n        </div>\n        {!showCreateForm && (\n          <button\n            onClick={() => setShowCreateForm(true)}\n            className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-3 rounded-lg font-semibold flex items-center transition-colors duration-200 transform hover:scale-105 shadow-lg\"\n          >\n            <UserPlus className=\"w-5 h-5 mr-2\" />\n            Add New User\n          </button>\n        )}\n      </div>\n\n      {/* Success/Error Messages */}\n      {success && (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-6 flex items-center\">\n          <CheckCircle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\n          <span>{success}</span>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-6 flex items-center\">\n          <AlertCircle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\n          <span>{error}</span>\n        </div>\n      )}\n\n      {/* Create/Edit User Form */}\n      {showCreateForm && (\n        <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 mb-8\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900\">\n              {editingUser ? 'Edit User' : 'Create New User'}\n            </h2>\n            <button\n              onClick={handleCancel}\n              className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n            >\n              <X className=\"w-6 h-6\" />\n            </button>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {/* Full Name */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Full Name *\n                </label>\n                <div className=\"relative\">\n                  <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    required\n                    disabled={isLoading}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed\"\n                    placeholder=\"Enter full name\"\n                  />\n                </div>\n              </div>\n\n              {/* Email */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Email Address *\n                </label>\n                <div className=\"relative\">\n                  <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    required\n                    disabled={isLoading}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed\"\n                    placeholder=\"Enter email address\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Password - New Field */}\n            {!editingUser && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Password *\n                </label>\n                <div className=\"relative\">\n                  <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={formData.password}\n                    onChange={handleChange}\n                    required\n                    disabled={isLoading}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed\"\n                    placeholder=\"Set user password\"\n                  />\n                </div>\n              </div>\n            )}\n\n            {/* Login Type & Role */}\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Login Type *\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"login_type\"\n                    value={formData.login_type}\n                    onChange={handleChange}\n                    disabled={isLoading}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed appearance-none bg-white\"\n                  >\n                    <option value=\"admin\">Admin</option>\n                    <option value=\"employee\">Employee</option>\n                    <option value=\"manager\">Manager</option>\n                  </select>\n                  <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\n                </div>\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Determines which login page section the user will use\n                </p>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Role *\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"role\"\n                    value={formData.role}\n                    onChange={handleChange}\n                    disabled={isLoading}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed appearance-none bg-white\"\n                  >\n                    <option value=\"admin\">Admin</option>\n                    <option value=\"employee\">Employee</option>\n                    <option value=\"manager\">Manager</option>\n                  </select>\n                  <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Department & Position */}\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Department *\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"department\"\n                    value={formData.department}\n                    onChange={handleChange}\n                    required\n                    disabled={isLoading}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed appearance-none bg-white\"\n                  >\n                    <option value=\"\">Select department...</option>\n                    {departmentOptions.map((dept) => (\n                      <option key={dept} value={dept}>\n                        {dept}\n                      </option>\n                    ))}\n                  </select>\n                  <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Position *\n                </label>\n                <div className=\"relative\">\n                  <select\n                    name=\"position\"\n                    value={formData.position}\n                    onChange={handleChange}\n                    required\n                    disabled={isLoading || !formData.department}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed appearance-none bg-white\"\n                  >\n                    <option value=\"\">\n                      {formData.department ? 'Select position...' : 'Select department first...'}\n                    </option>\n                    {formData.department && getPositionOptions(formData.department).map((position) => (\n                      <option key={position} value={position}>\n                        {position}\n                      </option>\n                    ))}\n                  </select>\n                  <ChevronDown className=\"absolute right-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none\" />\n                </div>\n                {!formData.department && (\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Please select a department first to see available positions\n                  </p>\n                )}\n              </div>\n            </div>\n\n            {/* Submit Buttons */}\n            <div className=\"flex items-center space-x-4\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"bg-orange-500 hover:bg-orange-600 disabled:bg-orange-300 text-white px-6 py-3 rounded-lg font-medium flex items-center transition-colors\"\n              >\n                <Save className=\"w-4 h-4 mr-2\" />\n                {isLoading ? 'Saving...' : editingUser ? 'Update User' : 'Create User'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleCancel}\n                disabled={isLoading}\n                className=\"border border-gray-300 text-gray-700 px-6 py-3 rounded-lg font-medium hover:bg-gray-50 transition-colors disabled:opacity-50\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {/* Users List */}\n      <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h2 className=\"text-xl font-semibold text-gray-900\">All Users ({users.length})</h2>\n          <p className=\"text-sm text-gray-600 mt-1\">All users from Supabase</p>\n        </div>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-50 border-b border-gray-200\">\n              <tr>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Name</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Email</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Login Type</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Department</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Position</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Created</th>\n                <th className=\"text-left px-6 py-4 font-medium text-gray-900\">Actions</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {users.map((user) => (\n                <tr key={user.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 font-medium text-gray-900\">{user.name}</td>\n                  <td className=\"px-6 py-4 text-gray-600\">{user.email}</td>\n                  <td className=\"px-6 py-4\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                      user.login_type === 'admin'\n                        ? 'bg-orange-100 text-orange-800'\n                        : user.login_type === 'employee'\n                        ? 'bg-blue-100 text-blue-800'\n                        : 'bg-green-100 text-green-800'\n                    }`}>\n                      {user.login_type}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 text-gray-600\">{user.department || 'Not specified'}</td>\n                  <td className=\"px-6 py-4 text-gray-600\">{user.position || 'Not specified'}</td>\n                  <td className=\"px-6 py-4 text-sm text-gray-600\">\n                    {user.created_at ? new Date(user.created_at).toLocaleDateString() : ''}\n                  </td>\n                  <td className=\"px-6 py-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => handleEdit(user)}\n                        className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg transition-colors\"\n                        title=\"Edit\"\n                      >\n                        <Edit className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleDelete(user.id)}\n                        className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors\"\n                        title=\"Delete User\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n        {users.length === 0 && (\n          <div className=\"text-center py-12\">\n            <User className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <p className=\"text-gray-600 mb-4\">No users found</p>\n            <button\n              onClick={() => setShowCreateForm(true)}\n              className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\n            >\n              Create Your First User\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserManagement;"],"names":[],"mappings":"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","debugId":null}}]
}