{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///Users/viengsone/Documents/slkwebsite-next/src/app/admin-dashboard/settings/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect } from 'react';\nimport { \n  Settings as SettingsIcon, \n  Save, \n  RefreshCw, \n  Shield, \n  Bell, \n  Palette, \n  Globe, \n  Database, \n  Mail, \n  Lock, \n  Eye, \n  EyeOff, \n  Download, \n  Upload, \n  Trash2, \n  AlertTriangle, \n  CheckCircle, \n  Info,\n  User,\n  Building2,\n  Phone,\n  MapPin,\n  Clock,\n  Monitor,\n  Moon,\n  Sun,\n  Smartphone,\n  Wifi,\n  HardDrive,\n  Activity,\n  BarChart3,\n  FileText,\n  Image,\n  Video,\n  Music,\n  Archive,\n  Key,\n  UserCheck,\n  Calendar,\n  Zap,\n  Target,\n  Layers,\n  Code, \n  ExternalLink,\n  LogOut,\n  Users\n} from 'lucide-react';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { supabase } from '../../../lib/supabase';\n\ninterface SettingsData {\n  // General Settings\n  siteName: string;\n  siteDescription: string;\n  siteUrl: string;\n  adminEmail: string;\n  timezone: string;\n  language: string;\n  dateFormat: string;\n  timeFormat: string;\n  \n  // Company Information\n  companyName: string;\n  companyAddress: string;\n  companyPhone: string;\n  companyEmail: string;\n  companyWebsite: string;\n  \n  // Security Settings\n  sessionTimeout: number;\n  maxLoginAttempts: number;\n  passwordMinLength: number;\n  requireStrongPassword: boolean;\n  enableTwoFactor: boolean;\n  autoLogoutInactive: boolean;\n  \n  // Notification Settings\n  emailNotifications: boolean;\n  pushNotifications: boolean;\n  notifyNewPosts: boolean;\n  notifyUserRegistration: boolean;\n  notifySystemUpdates: boolean;\n  \n  // Appearance Settings\n  theme: 'light' | 'dark' | 'auto';\n  primaryColor: string;\n  secondaryColor: string;\n  sidebarCollapsed: boolean;\n  showAnimations: boolean;\n  \n  // Content Settings\n  postsPerPage: number;\n  allowComments: boolean;\n  moderateComments: boolean;\n  defaultPostStatus: 'draft' | 'published';\n  autoSaveInterval: number;\n  \n  // Backup Settings\n  autoBackup: boolean;\n  backupFrequency: 'daily' | 'weekly' | 'monthly';\n  backupRetention: number;\n  \n  // Performance Settings\n  enableCaching: boolean;\n  cacheExpiration: number;\n  optimizeImages: boolean;\n  lazyLoading: boolean;\n}\n\ninterface SystemStats {\n  totalPosts: number;\n  totalUsers: number;\n  storageUsed: string;\n  lastBackup: string;\n  uptime: string;\n}\n\nconst SettingsManagement = () => {\n  const { user, logoutAllUsers } = useAuth();\n  const [isClient, setIsClient] = useState(false);\n  const [activeTab, setActiveTab] = useState('general');\n  const [settings, setSettings] = useState<SettingsData>({\n    // General Settings\n    siteName: 'SLK Trading & Construction',\n    siteDescription: 'Leading construction company in Laos offering design construction, waterproofing materials, and flooring materials.',\n    siteUrl: 'https://slktrading.la',\n    adminEmail: 'admin@slklaos.la',\n    timezone: 'Asia/Vientiane',\n    language: 'en',\n    dateFormat: 'MM/DD/YYYY',\n    timeFormat: '12',\n    \n    // Company Information\n    companyName: 'SLK Trading & Construction Co., Ltd',\n    companyAddress: 'Vientiane Capital, Laos',\n    companyPhone: '+856 21 123 456',\n    companyEmail: 'info@slktrading.la',\n    companyWebsite: 'https://slktrading.la',\n    \n    // Security Settings\n    sessionTimeout: 24,\n    maxLoginAttempts: 5,\n    passwordMinLength: 6,\n    requireStrongPassword: true,\n    enableTwoFactor: false,\n    autoLogoutInactive: true,\n    \n    // Notification Settings\n    emailNotifications: true,\n    pushNotifications: false,\n    notifyNewPosts: true,\n    notifyUserRegistration: true,\n    notifySystemUpdates: true,\n    \n    // Appearance Settings\n    theme: 'light',\n    primaryColor: '#f97316',\n    secondaryColor: '#3b82f6',\n    sidebarCollapsed: false,\n    showAnimations: true,\n    \n    // Content Settings\n    postsPerPage: 10,\n    allowComments: false,\n    moderateComments: true,\n    defaultPostStatus: 'draft',\n    autoSaveInterval: 30,\n    \n    // Backup Settings\n    autoBackup: true,\n    backupFrequency: 'weekly',\n    backupRetention: 30,\n    \n    // Performance Settings\n    enableCaching: true,\n    cacheExpiration: 3600,\n    optimizeImages: true,\n    lazyLoading: true\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\n  const [showLogoutAllConfirm, setShowLogoutAllConfirm] = useState(false);\n  const [systemStats, setSystemStats] = useState<SystemStats>({\n    totalPosts: 0,\n    totalUsers: 0,\n    storageUsed: '2.4 MB',\n    lastBackup: '2024-01-15',\n    uptime: '99.9%'\n  });\n\n  // Change Password State\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [passwordChangeLoading, setPasswordChangeLoading] = useState(false);\n  const [passwordChangeSuccess, setPasswordChangeSuccess] = useState('');\n  const [passwordChangeError, setPasswordChangeError] = useState('');\n\n  // Client-side hydration check\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isClient) return;\n    \n    loadSettings();\n    loadSystemStats();\n  }, [isClient]);\n\n  const loadSettings = () => {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const savedSettings = localStorage.getItem('slk_admin_settings');\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        setSettings(prevSettings => ({ ...prevSettings, ...parsed }));\n      }\n    } catch (error) {\n      console.error('Error loading settings:', error);\n    }\n  };\n\n  const loadSystemStats = () => {\n    if (typeof window === 'undefined') return;\n    \n    try {\n      const posts = JSON.parse(localStorage.getItem('slk_posts') || '[]');\n      const adminUsers = JSON.parse(localStorage.getItem('slk_admin_users') || '[]');\n      const employeeUsers = JSON.parse(localStorage.getItem('slk_employee_users') || '[]');\n      const managerUsers = JSON.parse(localStorage.getItem('slk_manager_users') || '[]');\n      \n      setSystemStats({\n        totalPosts: posts.length,\n        totalUsers: adminUsers.length + employeeUsers.length + managerUsers.length,\n        storageUsed: '2.4 MB',\n        lastBackup: new Date().toISOString().split('T')[0],\n        uptime: '99.9%'\n      });\n    } catch (error) {\n      console.error('Error loading system stats:', error);\n    }\n  };\n\n  const handleSave = async () => {\n    if (!isClient) return;\n    \n    setIsSaving(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      // Simulate save delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (typeof window !== 'undefined') {\n        localStorage.setItem('slk_admin_settings', JSON.stringify(settings));\n      }\n      \n      setSuccess('Settings saved successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Failed to save settings. Please try again.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const handleReset = async () => {\n    if (!isClient) return;\n    \n    if (!showResetConfirm) {\n      setShowResetConfirm(true);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 800));\n      \n      if (typeof window !== 'undefined') {\n        localStorage.removeItem('slk_admin_settings');\n      }\n      \n      // Reset to default settings\n      setSettings({\n        // General Settings\n        siteName: 'SLK Trading & Construction',\n        siteDescription: 'Leading construction company in Laos offering design construction, waterproofing materials, and flooring materials.',\n        siteUrl: 'https://slktrading.la',\n        adminEmail: 'admin@slklaos.la',\n        timezone: 'Asia/Vientiane',\n        language: 'en',\n        dateFormat: 'MM/DD/YYYY',\n        timeFormat: '12',\n        \n        // Company Information\n        companyName: 'SLK Trading & Construction Co., Ltd',\n        companyAddress: 'Vientiane Capital, Laos',\n        companyPhone: '+856 21 123 456',\n        companyEmail: 'info@slktrading.la',\n        companyWebsite: 'https://slktrading.la',\n        \n        // Security Settings\n        sessionTimeout: 24,\n        maxLoginAttempts: 5,\n        passwordMinLength: 6,\n        requireStrongPassword: true,\n        enableTwoFactor: false,\n        autoLogoutInactive: true,\n        \n        // Notification Settings\n        emailNotifications: true,\n        pushNotifications: false,\n        notifyNewPosts: true,\n        notifyUserRegistration: true,\n        notifySystemUpdates: true,\n        \n        // Appearance Settings\n        theme: 'light',\n        primaryColor: '#f97316',\n        secondaryColor: '#3b82f6',\n        sidebarCollapsed: false,\n        showAnimations: true,\n        \n        // Content Settings\n        postsPerPage: 10,\n        allowComments: false,\n        moderateComments: true,\n        defaultPostStatus: 'draft',\n        autoSaveInterval: 30,\n        \n        // Backup Settings\n        autoBackup: true,\n        backupFrequency: 'weekly',\n        backupRetention: 30,\n        \n        // Performance Settings\n        enableCaching: true,\n        cacheExpiration: 3600,\n        optimizeImages: true,\n        lazyLoading: true\n      });\n      \n      setSuccess('Settings reset to defaults successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Failed to reset settings.');\n    } finally {\n      setIsLoading(false);\n      setShowResetConfirm(false);\n    }\n  };\n\n  const handleLogoutAllUsers = async () => {\n    if (!isClient) return;\n    \n    if (!showLogoutAllConfirm) {\n      setShowLogoutAllConfirm(true);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      if (logoutAllUsers) {\n        logoutAllUsers();\n      }\n      \n      setSuccess('All users have been logged out successfully!');\n      setTimeout(() => setSuccess(''), 5000);\n    } catch (err) {\n      setError('Failed to logout all users.');\n    } finally {\n      setIsLoading(false);\n      setShowLogoutAllConfirm(false);\n    }\n  };\n\n  const handleExportSettings = () => {\n    if (!isClient || typeof window === 'undefined') return;\n    \n    try {\n      const dataStr = JSON.stringify(settings, null, 2);\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\n      const url = URL.createObjectURL(dataBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `slk-settings-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      setSuccess('Settings exported successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (error) {\n      console.error('Error exporting settings:', error);\n      setError('Failed to export settings.');\n    }\n  };\n\n  const handleImportSettings = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!isClient) return;\n    \n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedSettings = JSON.parse(e.target?.result as string);\n        setSettings(prevSettings => ({ ...prevSettings, ...importedSettings }));\n        setSuccess('Settings imported successfully!');\n        setTimeout(() => setSuccess(''), 3000);\n      } catch (err) {\n        setError('Invalid settings file format.');\n      }\n    };\n    reader.readAsText(file);\n    \n    // Reset file input\n    event.target.value = '';\n  };\n\n  const handleBackup = async () => {\n    if (!isClient || typeof window === 'undefined') return;\n    \n    setIsLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      const backupData = {\n        settings,\n        posts: JSON.parse(localStorage.getItem('slk_posts') || '[]'),\n        adminUsers: JSON.parse(localStorage.getItem('slk_admin_users') || '[]'),\n        employeeUsers: JSON.parse(localStorage.getItem('slk_employee_users') || '[]'),\n        managerUsers: JSON.parse(localStorage.getItem('slk_manager_users') || '[]'),\n        timestamp: new Date().toISOString()\n      };\n      \n      const dataStr = JSON.stringify(backupData, null, 2);\n      const dataBlob = new Blob([dataStr], { type: 'application/json' });\n      const url = URL.createObjectURL(dataBlob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `slk-backup-${new Date().toISOString().split('T')[0]}.json`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      \n      setSuccess('Backup created and downloaded successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Failed to create backup.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleClearCache = async () => {\n    if (!isClient) return;\n    \n    setIsLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Clear any cached data\n      if (typeof window !== 'undefined' && 'caches' in window) {\n        const cacheNames = await caches.keys();\n        await Promise.all(\n          cacheNames.map(cacheName => caches.delete(cacheName))\n        );\n      }\n      \n      setSuccess('Cache cleared successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Failed to clear cache.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOptimizeDatabase = async () => {\n    if (!isClient) return;\n    \n    setIsLoading(true);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // Simulate database optimization\n      setSuccess('Database optimized successfully!');\n      setTimeout(() => setSuccess(''), 3000);\n    } catch (err) {\n      setError('Failed to optimize database.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const tabs = [\n    { id: 'general', label: 'General', icon: SettingsIcon },\n    { id: 'company', label: 'Company', icon: Building2 },\n    { id: 'security', label: 'Security', icon: Shield },\n    { id: 'notifications', label: 'Notifications', icon: Bell },\n    { id: 'appearance', label: 'Appearance', icon: Palette },\n    { id: 'content', label: 'Content', icon: FileText },\n    { id: 'backup', label: 'Backup', icon: Archive },\n    { id: 'performance', label: 'Performance', icon: Zap },\n    { id: 'system', label: 'System Info', icon: Monitor }\n  ];\n\n  const renderTabContent = () => {\n    if (!isClient) {\n      return (\n        <div className=\"h-64 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n            <p className=\"text-gray-600\">Loading settings...</p>\n          </div>\n        </div>\n      );\n    }\n\n    switch (activeTab) {\n      case 'general':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Site Information</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Site Name</label>\n                  <input\n                    type=\"text\"\n                    value={settings.siteName}\n                    onChange={(e) => setSettings({ ...settings, siteName: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Site URL</label>\n                  <input\n                    type=\"url\"\n                    value={settings.siteUrl}\n                    onChange={(e) => setSettings({ ...settings, siteUrl: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Site Description</label>\n                <textarea\n                  value={settings.siteDescription}\n                  onChange={(e) => setSettings({ ...settings, siteDescription: e.target.value })}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Localization</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Timezone</label>\n                  <select\n                    value={settings.timezone}\n                    onChange={(e) => setSettings({ ...settings, timezone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"Asia/Vientiane\">Asia/Vientiane (GMT+7)</option>\n                    <option value=\"Asia/Bangkok\">Asia/Bangkok (GMT+7)</option>\n                    <option value=\"UTC\">UTC (GMT+0)</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Language</label>\n                  <select\n                    value={settings.language}\n                    onChange={(e) => setSettings({ ...settings, language: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"en\">English</option>\n                    <option value=\"lo\">ລາວ (Lao)</option>\n                    <option value=\"th\">ไทย (Thai)</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date Format</label>\n                  <select\n                    value={settings.dateFormat}\n                    onChange={(e) => setSettings({ ...settings, dateFormat: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"MM/DD/YYYY\">MM/DD/YYYY</option>\n                    <option value=\"DD/MM/YYYY\">DD/MM/YYYY</option>\n                    <option value=\"YYYY-MM-DD\">YYYY-MM-DD</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Time Format</label>\n                  <select\n                    value={settings.timeFormat}\n                    onChange={(e) => setSettings({ ...settings, timeFormat: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"12\">12 Hour (AM/PM)</option>\n                    <option value=\"24\">24 Hour</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'company':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Company Information</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Company Name</label>\n                  <input\n                    type=\"text\"\n                    value={settings.companyName}\n                    onChange={(e) => setSettings({ ...settings, companyName: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Phone Number</label>\n                  <input\n                    type=\"tel\"\n                    value={settings.companyPhone}\n                    onChange={(e) => setSettings({ ...settings, companyPhone: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                  <input\n                    type=\"email\"\n                    value={settings.companyEmail}\n                    onChange={(e) => setSettings({ ...settings, companyEmail: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Website</label>\n                  <input\n                    type=\"url\"\n                    value={settings.companyWebsite}\n                    onChange={(e) => setSettings({ ...settings, companyWebsite: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Address</label>\n                <textarea\n                  value={settings.companyAddress}\n                  onChange={(e) => setSettings({ ...settings, companyAddress: e.target.value })}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                />\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'security':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Authentication Settings</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Session Timeout (hours)</label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    max=\"168\"\n                    value={settings.sessionTimeout}\n                    onChange={(e) => setSettings({ ...settings, sessionTimeout: parseInt(e.target.value) || 1 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Max Login Attempts</label>\n                  <input\n                    type=\"number\"\n                    min=\"3\"\n                    max=\"10\"\n                    value={settings.maxLoginAttempts}\n                    onChange={(e) => setSettings({ ...settings, maxLoginAttempts: parseInt(e.target.value) || 3 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Minimum Password Length</label>\n                  <input\n                    type=\"number\"\n                    min=\"6\"\n                    max=\"20\"\n                    value={settings.passwordMinLength}\n                    onChange={(e) => setSettings({ ...settings, passwordMinLength: parseInt(e.target.value) || 6 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Security Options</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Require Strong Passwords</label>\n                    <p className=\"text-xs text-gray-500\">Enforce uppercase, lowercase, numbers, and special characters</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.requireStrongPassword}\n                    onChange={(e) => setSettings({ ...settings, requireStrongPassword: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Auto-logout Inactive Users</label>\n                    <p className=\"text-xs text-gray-500\">Automatically log out users after session timeout</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.autoLogoutInactive}\n                    onChange={(e) => setSettings({ ...settings, autoLogoutInactive: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Two-Factor Authentication</label>\n                    <p className=\"text-xs text-gray-500\">Enable 2FA for additional security (Coming Soon)</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.enableTwoFactor}\n                    onChange={(e) => setSettings({ ...settings, enableTwoFactor: e.target.checked })}\n                    disabled\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500 disabled:opacity-50\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            {/* Global Logout Section */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Global User Management</h3>\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-6\">\n                <div className=\"flex items-start\">\n                  <AlertTriangle className=\"w-6 h-6 text-red-600 mr-3 mt-0.5 flex-shrink-0\" />\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-red-900 mb-2\">Logout All Users</h4>\n                    <p className=\"text-sm text-red-700 mb-4\">\n                      This will immediately log out all users across all login types (Admin, Employee, Manager) \n                      from all devices and sessions. This action cannot be undone.\n                    </p>\n                    <div className=\"bg-red-100 border border-red-300 rounded-lg p-3 mb-4\">\n                      <h5 className=\"font-medium text-red-900 text-sm mb-2\">This action will:</h5>\n                      <ul className=\"text-xs text-red-800 space-y-1\">\n                        <li>• Clear all active sessions across all devices</li>\n                        <li>• Remove all \"Remember Me\" saved logins</li>\n                        <li>• Force users to log in again with their credentials</li>\n                        <li>• Apply to Admin, Employee, and Manager users</li>\n                        <li>• Take effect immediately across all browser tabs</li>\n                      </ul>\n                    </div>\n                    <div className=\"flex items-center space-x-3\">\n                      <button\n                        onClick={handleLogoutAllUsers}\n                        disabled={isLoading}\n                        className={`flex items-center px-4 py-2 rounded-lg font-medium text-sm transition-colors ${\n                          showLogoutAllConfirm \n                            ? 'bg-red-600 hover:bg-red-700 text-white' \n                            : 'bg-red-100 hover:bg-red-200 text-red-800'\n                        } disabled:opacity-50 disabled:cursor-not-allowed`}\n                      >\n                        <LogOut className=\"w-4 h-4 mr-2\" />\n                        {isLoading ? 'Processing...' : showLogoutAllConfirm ? 'Confirm Logout All Users' : 'Logout All Users'}\n                      </button>\n                      {showLogoutAllConfirm && (\n                        <button\n                          onClick={() => setShowLogoutAllConfirm(false)}\n                          className=\"text-gray-500 hover:text-gray-700 text-sm\"\n                        >\n                          Cancel\n                        </button>\n                      )}\n                    </div>\n                    {showLogoutAllConfirm && (\n                      <p className=\"text-xs text-red-600 mt-2 font-medium\">\n                        ⚠️ Click \"Confirm Logout All Users\" to proceed with global logout\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Change Password Section */}\n            <div className=\"mt-8\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Change Password</h3>\n              <form\n                onSubmit={async (e) => {\n                  e.preventDefault();\n                  setPasswordChangeError('');\n                  setPasswordChangeSuccess('');\n                  if (!newPassword || newPassword.length < settings.passwordMinLength) {\n                    setPasswordChangeError(`Password must be at least ${settings.passwordMinLength} characters.`);\n                    return;\n                  }\n                  if (newPassword !== confirmPassword) {\n                    setPasswordChangeError('Passwords do not match.');\n                    return;\n                  }\n                  setPasswordChangeLoading(true);\n                  const { error } = await supabase.auth.updateUser({ password: newPassword });\n                  if (error) {\n                    setPasswordChangeError(error.message);\n                  } else {\n                    setPasswordChangeSuccess('Password updated successfully!');\n                    setNewPassword('');\n                    setConfirmPassword('');\n                  }\n                  setPasswordChangeLoading(false);\n                }}\n                className=\"space-y-4 max-w-md\"\n              >\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                    autoComplete=\"new-password\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Confirm New Password</label>\n                  <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                    autoComplete=\"new-password\"\n                  />\n                </div>\n                {passwordChangeError && (\n                  <div className=\"text-red-600 text-sm\">{passwordChangeError}</div>\n                )}\n                {passwordChangeSuccess && (\n                  <div className=\"text-green-600 text-sm\">{passwordChangeSuccess}</div>\n                )}\n                <button\n                  type=\"submit\"\n                  disabled={passwordChangeLoading}\n                  className=\"bg-orange-500 hover:bg-orange-600 text-white px-6 py-2 rounded-lg font-medium transition-colors\"\n                >\n                  {passwordChangeLoading ? 'Updating...' : 'Change Password'}\n                </button>\n              </form>\n            </div>\n          </div>\n        );\n\n      case 'notifications':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Notification Preferences</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Email Notifications</label>\n                    <p className=\"text-xs text-gray-500\">Receive notifications via email</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.emailNotifications}\n                    onChange={(e) => setSettings({ ...settings, emailNotifications: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Push Notifications</label>\n                    <p className=\"text-xs text-gray-500\">Browser push notifications (Coming Soon)</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.pushNotifications}\n                    onChange={(e) => setSettings({ ...settings, pushNotifications: e.target.checked })}\n                    disabled\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500 disabled:opacity-50\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">New Posts</label>\n                    <p className=\"text-xs text-gray-500\">Notify when new posts are published</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.notifyNewPosts}\n                    onChange={(e) => setSettings({ ...settings, notifyNewPosts: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">User Registration</label>\n                    <p className=\"text-xs text-gray-500\">Notify when new users register</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.notifyUserRegistration}\n                    onChange={(e) => setSettings({ ...settings, notifyUserRegistration: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">System Updates</label>\n                    <p className=\"text-xs text-gray-500\">Notify about system updates and maintenance</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.notifySystemUpdates}\n                    onChange={(e) => setSettings({ ...settings, notifySystemUpdates: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'appearance':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Theme Settings</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Theme</label>\n                  <select\n                    value={settings.theme}\n                    onChange={(e) => setSettings({ ...settings, theme: e.target.value as any })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"light\">Light</option>\n                    <option value=\"dark\">Dark (Coming Soon)</option>\n                    <option value=\"auto\">Auto (System)</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Primary Color</label>\n                  <div className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"color\"\n                      value={settings.primaryColor}\n                      onChange={(e) => setSettings({ ...settings, primaryColor: e.target.value })}\n                      className=\"w-12 h-10 border border-gray-300 rounded cursor-pointer\"\n                    />\n                    <input\n                      type=\"text\"\n                      value={settings.primaryColor}\n                      onChange={(e) => setSettings({ ...settings, primaryColor: e.target.value })}\n                      className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Interface Options</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Sidebar Collapsed by Default</label>\n                    <p className=\"text-xs text-gray-500\">Start with collapsed sidebar</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.sidebarCollapsed}\n                    onChange={(e) => setSettings({ ...settings, sidebarCollapsed: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Show Animations</label>\n                    <p className=\"text-xs text-gray-500\">Enable interface animations and transitions</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.showAnimations}\n                    onChange={(e) => setSettings({ ...settings, showAnimations: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'content':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Content Management</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Posts Per Page</label>\n                  <input\n                    type=\"number\"\n                    min=\"5\"\n                    max=\"50\"\n                    value={settings.postsPerPage}\n                    onChange={(e) => setSettings({ ...settings, postsPerPage: parseInt(e.target.value) || 5 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Default Post Status</label>\n                  <select\n                    value={settings.defaultPostStatus}\n                    onChange={(e) => setSettings({ ...settings, defaultPostStatus: e.target.value as any })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"draft\">Draft</option>\n                    <option value=\"published\">Published</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Auto-save Interval (seconds)</label>\n                  <input\n                    type=\"number\"\n                    min=\"10\"\n                    max=\"300\"\n                    value={settings.autoSaveInterval}\n                    onChange={(e) => setSettings({ ...settings, autoSaveInterval: parseInt(e.target.value) || 10 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Comment Settings</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Allow Comments</label>\n                    <p className=\"text-xs text-gray-500\">Enable commenting on posts (Coming Soon)</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.allowComments}\n                    onChange={(e) => setSettings({ ...settings, allowComments: e.target.checked })}\n                    disabled\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500 disabled:opacity-50\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Moderate Comments</label>\n                    <p className=\"text-xs text-gray-500\">Require approval before comments are published</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.moderateComments}\n                    onChange={(e) => setSettings({ ...settings, moderateComments: e.target.checked })}\n                    disabled={!settings.allowComments}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500 disabled:opacity-50\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'backup':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Backup Settings</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Backup Frequency</label>\n                  <select\n                    value={settings.backupFrequency}\n                    onChange={(e) => setSettings({ ...settings, backupFrequency: e.target.value as any })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  >\n                    <option value=\"daily\">Daily</option>\n                    <option value=\"weekly\">Weekly</option>\n                    <option value=\"monthly\">Monthly</option>\n                  </select>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Backup Retention (days)</label>\n                  <input\n                    type=\"number\"\n                    min=\"7\"\n                    max=\"365\"\n                    value={settings.backupRetention}\n                    onChange={(e) => setSettings({ ...settings, backupRetention: parseInt(e.target.value) || 7 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"mt-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Automatic Backups</label>\n                    <p className=\"text-xs text-gray-500\">Enable scheduled automatic backups</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.autoBackup}\n                    onChange={(e) => setSettings({ ...settings, autoBackup: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Manual Backup</h3>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  Create a manual backup of all your data including settings, posts, and users.\n                </p>\n                <button\n                  onClick={handleBackup}\n                  disabled={isLoading}\n                  className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white px-6 py-2 rounded-lg font-medium flex items-center transition-colors\"\n                >\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  {isLoading ? 'Creating Backup...' : 'Create Backup Now'}\n                </button>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'performance':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance Optimization</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cache Expiration (seconds)</label>\n                  <input\n                    type=\"number\"\n                    min=\"300\"\n                    max=\"86400\"\n                    value={settings.cacheExpiration}\n                    onChange={(e) => setSettings({ ...settings, cacheExpiration: parseInt(e.target.value) || 300 })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-4 mt-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Enable Caching</label>\n                    <p className=\"text-xs text-gray-500\">Cache content for faster loading</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.enableCaching}\n                    onChange={(e) => setSettings({ ...settings, enableCaching: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Optimize Images</label>\n                    <p className=\"text-xs text-gray-500\">Automatically optimize uploaded images</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.optimizeImages}\n                    onChange={(e) => setSettings({ ...settings, optimizeImages: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Lazy Loading</label>\n                    <p className=\"text-xs text-gray-500\">Load images only when needed</p>\n                  </div>\n                  <input\n                    type=\"checkbox\"\n                    checked={settings.lazyLoading}\n                    onChange={(e) => setSettings({ ...settings, lazyLoading: e.target.checked })}\n                    className=\"w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 'system':\n        return (\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Information</h3>\n              <div className=\"grid md:grid-cols-2 gap-6\">\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"flex items-center mb-2\">\n                    <FileText className=\"w-5 h-5 text-blue-600 mr-2\" />\n                    <span className=\"font-medium text-gray-900\">Total Posts</span>\n                  </div>\n                  <p className=\"text-2xl font-bold text-blue-600\">{systemStats.totalPosts}</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"flex items-center mb-2\">\n                    <Users className=\"w-5 h-5 text-green-600 mr-2\" />\n                    <span className=\"font-medium text-gray-900\">Total Users</span>\n                  </div>\n                  <p className=\"text-2xl font-bold text-green-600\">{systemStats.totalUsers}</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"flex items-center mb-2\">\n                    <HardDrive className=\"w-5 h-5 text-purple-600 mr-2\" />\n                    <span className=\"font-medium text-gray-900\">Storage Used</span>\n                  </div>\n                  <p className=\"text-2xl font-bold text-purple-600\">{systemStats.storageUsed}</p>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"flex items-center mb-2\">\n                    <Activity className=\"w-5 h-5 text-orange-600 mr-2\" />\n                    <span className=\"font-medium text-gray-900\">Uptime</span>\n                  </div>\n                  <p className=\"text-2xl font-bold text-orange-600\">{systemStats.uptime}</p>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Actions</h3>\n              <div className=\"space-y-4\">\n                <div className=\"bg-blue-50 border border-blue-200 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-blue-900 mb-2\">Clear Cache</h4>\n                  <p className=\"text-sm text-blue-700 mb-3\">Clear all cached data to free up space and ensure fresh content.</p>\n                  <button \n                    onClick={handleClearCache}\n                    disabled={isLoading}\n                    className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\n                  >\n                    {isLoading ? 'Clearing...' : 'Clear Cache'}\n                  </button>\n                </div>\n                \n                <div className=\"bg-green-50 border border-green-200 p-4 rounded-lg\">\n                  <h4 className=\"font-medium text-green-900 mb-2\">Optimize Database</h4>\n                  <p className=\"text-sm text-green-700 mb-3\">Optimize local storage for better performance.</p>\n                  <button \n                    onClick={handleOptimizeDatabase}\n                    disabled={isLoading}\n                    className=\"bg-green-600 hover:bg-green-700 disabled:bg-green-400 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\n                  >\n                    {isLoading ? 'Optimizing...' : 'Optimize Now'}\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Version Information</h3>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"grid md:grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Admin Panel Version:</span>\n                    <span className=\"ml-2 text-gray-600\">v1.0.0</span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Last Updated:</span>\n                    <span className=\"ml-2 text-gray-600\">January 2024</span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Browser:</span>\n                    <span className=\"ml-2 text-gray-600\">\n                      {isClient && typeof navigator !== 'undefined' ? navigator.userAgent.split(' ')[0] : 'Unknown'}\n                    </span>\n                  </div>\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Platform:</span>\n                    <span className=\"ml-2 text-gray-600\">\n                      {isClient && typeof navigator !== 'undefined' ? navigator.platform : 'Unknown'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  // Don't render on server-side to prevent hydration issues\n  if (!isClient) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-orange-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading Settings...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Settings</h1>\n          <p className=\"text-gray-600\">Configure your admin panel and system preferences</p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={handleExportSettings}\n            className=\"border border-gray-300 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-50 transition-colors flex items-center\"\n          >\n            <Download className=\"w-4 h-4 mr-2\" />\n            Export\n          </button>\n          <label className=\"border border-gray-300 text-gray-700 px-4 py-2 rounded-lg font-medium hover:bg-gray-50 transition-colors flex items-center cursor-pointer\">\n            <Upload className=\"w-4 h-4 mr-2\" />\n            Import\n            <input\n              type=\"file\"\n              accept=\".json\"\n              onChange={handleImportSettings}\n              className=\"hidden\"\n            />\n          </label>\n        </div>\n      </div>\n\n      {/* Success/Error Messages */}\n      {success && (\n        <div className=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg mb-6 flex items-center\">\n          <CheckCircle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\n          <span>{success}</span>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-lg mb-6 flex items-center\">\n          <AlertTriangle className=\"w-5 h-5 mr-2 flex-shrink-0\" />\n          <span>{error}</span>\n        </div>\n      )}\n\n      <div className=\"grid lg:grid-cols-4 gap-8\">\n        {/* Sidebar Navigation */}\n        <div className=\"lg:col-span-1\">\n          <nav className=\"space-y-2\">\n            {tabs.map((tab) => {\n              const IconComponent = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id)}\n                  className={`w-full flex items-center px-4 py-3 text-left rounded-lg transition-colors duration-200 ${\n                    activeTab === tab.id\n                      ? 'bg-orange-50 text-orange-600 border-r-2 border-orange-500'\n                      : 'text-gray-700 hover:bg-gray-50'\n                  }`}\n                >\n                  <IconComponent className=\"w-5 h-5 mr-3\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6\">\n            {renderTabContent()}\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex items-center justify-between mt-6\">\n            <div className=\"flex items-center space-x-3\">\n              <button\n                onClick={handleReset}\n                disabled={isLoading}\n                className={`border border-red-300 text-red-700 px-6 py-2 rounded-lg font-medium hover:bg-red-50 transition-colors disabled:opacity-50 flex items-center ${\n                  showResetConfirm ? 'bg-red-50 border-red-500' : ''\n                }`}\n              >\n                <RefreshCw className=\"w-4 h-4 mr-2\" />\n                {showResetConfirm ? 'Confirm Reset' : 'Reset to Defaults'}\n              </button>\n              {showResetConfirm && (\n                <button\n                  onClick={() => setShowResetConfirm(false)}\n                  className=\"text-gray-500 hover:text-gray-700 text-sm\"\n                >\n                  Cancel\n                </button>\n              )}\n            </div>\n            \n            <button\n              onClick={handleSave}\n              disabled={isSaving}\n              className=\"bg-orange-500 hover:bg-orange-600 disabled:bg-orange-400 text-white px-8 py-2 rounded-lg font-semibold flex items-center transition-colors\"\n            >\n              <Save className=\"w-4 h-4 mr-2\" />\n              {isSaving ? 'Saving...' : 'Save Settings'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsManagement;"],"names":[],"mappings":"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","debugId":null}}]
}